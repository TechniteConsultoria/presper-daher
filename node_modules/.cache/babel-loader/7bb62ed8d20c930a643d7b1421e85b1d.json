{"ast":null,"code":"var _jsxFileName = \"/Users/viniciusoliveira/Documents/developer/workspace/ws-technite/project-plataforma-ead/presper-daher/src/contexts/CartContext/CartContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartFromLocalStorage = JSON.parse(localStorage.getItem(\"cart\") || \"[]\");\nexport const CartContext = /*#__PURE__*/createContext({});\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [cart, setCart] = useState(cartFromLocalStorage);\n\n  function addItemToCart(item) {\n    let newItem = Object.assign({}, item);\n    let found = cart.find(({\n      id\n    }) => id === item.id);\n\n    if (found === undefined) {\n      setCart([...cart, newItem]);\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    } else {\n      console.log(\"é igual:\", found);\n    }\n  }\n\n  function removeItemFromCart(_id) {\n    console.log(_id);\n    let formatedList = cart.map(prod => prod.id === _id);\n    console.log(cart);\n    console.log(formatedList);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      setCart,\n      addItemToCart,\n      removeItemFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"Z/oegwAWV/RUb1Uzva1sv65E09s=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/viniciusoliveira/Documents/developer/workspace/ws-technite/project-plataforma-ead/presper-daher/src/contexts/CartContext/CartContext.jsx"],"names":["createContext","useState","useEffect","cartFromLocalStorage","JSON","parse","localStorage","getItem","CartContext","CartProvider","children","cart","setCart","addItemToCart","item","newItem","Object","assign","found","find","id","undefined","setItem","stringify","console","log","removeItemFromCart","_id","formatedList","map","prod"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,MAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAA3C,CAA7B;AAEA,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,MAAMS,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACE,oBAAD,CAAhC;;AAEA,WAASU,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAIC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAlB,CAAd;AACA,QAAII,KAAK,GAAGP,IAAI,CAACQ,IAAL,CAAU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAYA,EAAE,KAAKN,IAAI,CAACM,EAAlC,CAAZ;;AACA,QAAIF,KAAK,KAAKG,SAAd,EAAyB;AACvBT,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUI,OAAV,CAAD,CAAP;AACAT,MAAAA,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BlB,IAAI,CAACmB,SAAL,CAAeZ,IAAf,CAA7B;AACD,KAHD,MAGO;AACLa,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,KAAxB;AACD;AACF;;AAED,WAASQ,kBAAT,CAA4BC,GAA5B,EAAiC;AAC/BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,QAAIC,YAAY,GAAGjB,IAAI,CAACkB,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYO,GAA/B,CAAnB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;AACD;;AAED1B,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BlB,IAAI,CAACmB,SAAL,CAAeZ,IAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,aAAjB;AAAgCa,MAAAA;AAAhC,KADT;AAAA,cAGGhB;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhCM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nconst cartFromLocalStorage = JSON.parse(localStorage.getItem(\"cart\") || \"[]\");\n\nexport const CartContext = createContext({});\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState(cartFromLocalStorage);\n\n  function addItemToCart(item) {\n    let newItem = Object.assign({}, item);\n    let found = cart.find(({ id }) => id === item.id);\n    if (found === undefined) {\n      setCart([...cart, newItem]);\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    } else {\n      console.log(\"é igual:\", found);\n    }\n  }\n\n  function removeItemFromCart(_id) {\n    console.log(_id);\n    let formatedList = cart.map((prod) => prod.id === _id);\n    console.log(cart);\n    console.log(formatedList);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  return (\n    <CartContext.Provider\n      value={{ cart, setCart, addItemToCart, removeItemFromCart }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}