[{"/home/ryan/Desktop/Trabalho/presper-daher/src/index.js":"1","/home/ryan/Desktop/Trabalho/presper-daher/src/reportWebVitals.js":"2","/home/ryan/Desktop/Trabalho/presper-daher/src/App.js":"3","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/Login/Login.jsx":"4","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/CourseDetails/CourseDetails.jsx":"5","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/Admin/Admin.jsx":"6","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/MyCourses/MyCourses.jsx":"7","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/Perfil/Perfil.jsx":"8","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/MyCertificates/MyCertificates.jsx":"9","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Footer/Footer.jsx":"10","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/MyPaymentInfo/MyPaymentInfo.jsx":"11","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Header/Header.jsx":"12","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/Home/Home.jsx":"13","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/Signup/Signup.jsx":"14","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/ShoppingCart/ShoppingCart.jsx":"15","/home/ryan/Desktop/Trabalho/presper-daher/src/data/cursos.js":"16","/home/ryan/Desktop/Trabalho/presper-daher/src/data/categorias.js":"17","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/RatingCard/RatingCard.jsx":"18","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AdminComunication/AdminComunication.jsx":"19","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AdminCourses/AdminCourses.jsx":"20","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/MyCoursesCard/MyCoursesCard.jsx":"21","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AdminNavbar/AdminNavbarData.jsx":"22","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/AddCreditCardModal.jsx":"23","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/CertificateCard/CertificateCard.jsx":"24","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/DeleteCreditCardModal.jsx":"25","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Navbar/Navbar.jsx":"26","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Card/Card.jsx":"27","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/ProductCard/ProductCard.jsx":"28","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/CommentsCard/CommentsCard.jsx":"29","/home/ryan/Desktop/Trabalho/presper-daher/src/data/mensagens.js":"30","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/MessageModal.jsx":"31","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/EditCourseModal.jsx":"32","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/CreateCourseModal.jsx":"33","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultCreateCourseModal.jsx":"34","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultMessageModal.jsx":"35","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/DeleteVideoModal.jsx":"36","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultEditCourseModal.jsx":"37","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultDeleteVideoModal.jsx":"38","/home/ryan/Desktop/Trabalho/presper-daher/src/services/imagem/upload.js":"39","/home/ryan/Desktop/Trabalho/presper-daher/src/services/api.js":"40","/home/ryan/Desktop/Trabalho/presper-daher/src/services/user/cadastro.js":"41","/home/ryan/Desktop/Trabalho/presper-daher/src/services/user/loadUser.js":"42","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/handleLocalStorage.js":"43","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/handleLocalStorageEmailAndPassword.js":"44","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/responseHandler.js":"45","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/servidorErrorMessage.js":"46","/home/ryan/Desktop/Trabalho/presper-daher/src/services/user/login.js":"47","/home/ryan/Desktop/Trabalho/presper-daher/src/services/user/updateUser.js":"48","/home/ryan/Desktop/Trabalho/presper-daher/src/services/carrinho/deleteProductOfCart.js":"49","/home/ryan/Desktop/Trabalho/presper-daher/src/services/carrinho/loadCart.js":"50","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/makeSumToCarrinho.js":"51","/home/ryan/Desktop/Trabalho/presper-daher/src/services/carrinho/addInCart.js":"52","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/format.js":"53","/home/ryan/Desktop/Trabalho/presper-daher/src/services/curso/cursoLoad.js":"54","/home/ryan/Desktop/Trabalho/presper-daher/src/services/pergunta/perguntaLoad.js":"55","/home/ryan/Desktop/Trabalho/presper-daher/src/services/produto/productFind.js":"56","/home/ryan/Desktop/Trabalho/presper-daher/src/services/produto/loadProduct.js":"57","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AdminBanners/AdminBanners.jsx":"58","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/AddBannerModal.jsx":"59","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/BannerCard/BannerCard.jsx":"60","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/currenryConfig.js":"61","/home/ryan/Desktop/Trabalho/presper-daher/src/services/curso/cursoCreate.js":"62","/home/ryan/Desktop/Trabalho/presper-daher/src/services/curso/cursoUpdate.js":"63","/home/ryan/Desktop/Trabalho/presper-daher/src/services/categoria/loadCategorias.js":"64","/home/ryan/Desktop/Trabalho/presper-daher/src/services/banner/bannerCreate.js":"65","/home/ryan/Desktop/Trabalho/presper-daher/src/services/banner/bannerLoad.js":"66","/home/ryan/Desktop/Trabalho/presper-daher/src/services/banner/bannerDelete.js":"67","/home/ryan/Desktop/Trabalho/presper-daher/src/services/banner/bannerUpdate.js":"68","/home/ryan/Desktop/Trabalho/presper-daher/src/contexts/CartContext.js":"69","/home/ryan/Desktop/Trabalho/presper-daher/src/contexts/CreditCardContext.js":"70","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/CheckOut/CheckOut.jsx":"71","/home/ryan/Desktop/Trabalho/presper-daher/src/contexts/CourseContext.js":"72","/home/ryan/Desktop/Trabalho/presper-daher/src/contexts/AuthContext.js":"73","/home/ryan/Desktop/Trabalho/presper-daher/src/services/CreditCardService.js":"74","/home/ryan/Desktop/Trabalho/presper-daher/src/services/Hooks/SignupPageHook.js":"75","/home/ryan/Desktop/Trabalho/presper-daher/src/services/CourseService.js":"76","/home/ryan/Desktop/Trabalho/presper-daher/src/services/MessageService.js":"77","/home/ryan/Desktop/Trabalho/presper-daher/src/services/ApiService.js":"78","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AddCardForm/AddCardForm.jsx":"79","/home/ryan/Desktop/Trabalho/presper-daher/src/services/UserService.js":"80","/home/ryan/Desktop/Trabalho/presper-daher/src/services/Hooks/CreditCardPageHook.js":"81","/home/ryan/Desktop/Trabalho/presper-daher/src/services/Hooks/CoursePageHook.js":"82","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/DeleteCourseModal.jsx":"83","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultDeleteCourseModal.jsx":"84","/home/ryan/Desktop/Trabalho/presper-daher/src/services/Hooks/LoginPageHook.js":"85","/home/ryan/Desktop/Trabalho/presper-daher/src/services/curso/cursoDelete.js":"86","/home/ryan/Desktop/Trabalho/presper-daher/src/services/curso/cursoFind.js":"87","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AdminCategory/AdminCategory.jsx":"88","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/CreateCategoryModal.jsx":"89","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/EditCategoryModal.jsx":"90","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultEditCategoryModal.jsx":"91","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/DeleteCategoryModal.jsx":"92","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultCreateCategoryModal.jsx":"93","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultDeleteCategoryModal.jsx":"94"},{"size":675,"mtime":1646681609633,"results":"95","hashOfConfig":"96"},{"size":362,"mtime":1646318098077,"results":"97","hashOfConfig":"96"},{"size":3133,"mtime":1646682096077,"results":"98","hashOfConfig":"96"},{"size":3945,"mtime":1646742428216,"results":"99","hashOfConfig":"96"},{"size":3545,"mtime":1646681609637,"results":"100","hashOfConfig":"96"},{"size":2920,"mtime":1646743139183,"results":"101","hashOfConfig":"96"},{"size":6312,"mtime":1646318098077,"results":"102","hashOfConfig":"96"},{"size":7129,"mtime":1646398068812,"results":"103","hashOfConfig":"96"},{"size":6139,"mtime":1646661260810,"results":"104","hashOfConfig":"96"},{"size":370,"mtime":1646681609625,"results":"105","hashOfConfig":"96"},{"size":5147,"mtime":1646681609637,"results":"106","hashOfConfig":"96"},{"size":1662,"mtime":1646318098077,"results":"107","hashOfConfig":"96"},{"size":9111,"mtime":1646739400555,"results":"108","hashOfConfig":"96"},{"size":4530,"mtime":1646741687335,"results":"109","hashOfConfig":"96"},{"size":3726,"mtime":1646681609637,"results":"110","hashOfConfig":"96"},{"size":4170,"mtime":1646318098077,"results":"111","hashOfConfig":"96"},{"size":383,"mtime":1646318098077,"results":"112","hashOfConfig":"96"},{"size":1280,"mtime":1646318098077,"results":"113","hashOfConfig":"96"},{"size":12624,"mtime":1646681609601,"results":"114","hashOfConfig":"96"},{"size":8816,"mtime":1646682317314,"results":"115","hashOfConfig":"96"},{"size":1193,"mtime":1646318098077,"results":"116","hashOfConfig":"96"},{"size":751,"mtime":1646743569945,"results":"117","hashOfConfig":"96"},{"size":4910,"mtime":1646318098077,"results":"118","hashOfConfig":"96"},{"size":1504,"mtime":1646318098073,"results":"119","hashOfConfig":"96"},{"size":1546,"mtime":1646318098077,"results":"120","hashOfConfig":"96"},{"size":12005,"mtime":1646740860818,"results":"121","hashOfConfig":"96"},{"size":2047,"mtime":1646681609701,"results":"122","hashOfConfig":"96"},{"size":619,"mtime":1646318098077,"results":"123","hashOfConfig":"96"},{"size":780,"mtime":1646318098073,"results":"124","hashOfConfig":"96"},{"size":2833,"mtime":1646318098077,"results":"125","hashOfConfig":"96"},{"size":5967,"mtime":1646681609629,"results":"126","hashOfConfig":"96"},{"size":12609,"mtime":1646740130609,"results":"127","hashOfConfig":"96"},{"size":10239,"mtime":1646682682168,"results":"128","hashOfConfig":"96"},{"size":1207,"mtime":1646681609629,"results":"129","hashOfConfig":"96"},{"size":1106,"mtime":1646318098077,"results":"130","hashOfConfig":"96"},{"size":1823,"mtime":1646318098077,"results":"131","hashOfConfig":"96"},{"size":1066,"mtime":1646681609629,"results":"132","hashOfConfig":"96"},{"size":1007,"mtime":1646318098077,"results":"133","hashOfConfig":"96"},{"size":1418,"mtime":1646739792483,"results":"134","hashOfConfig":"96"},{"size":1694,"mtime":1646741466615,"results":"135","hashOfConfig":"96"},{"size":1194,"mtime":1646421785775,"results":"136","hashOfConfig":"96"},{"size":904,"mtime":1646329084789,"results":"137","hashOfConfig":"96"},{"size":542,"mtime":1646328798914,"results":"138","hashOfConfig":"96"},{"size":252,"mtime":1646328798914,"results":"139","hashOfConfig":"96"},{"size":491,"mtime":1646328798914,"results":"140","hashOfConfig":"96"},{"size":166,"mtime":1646328798914,"results":"141","hashOfConfig":"96"},{"size":1069,"mtime":1646651766017,"results":"142","hashOfConfig":"96"},{"size":912,"mtime":1646397349430,"results":"143","hashOfConfig":"96"},{"size":633,"mtime":1646328772453,"results":"144","hashOfConfig":"96"},{"size":197,"mtime":1646328772453,"results":"145","hashOfConfig":"96"},{"size":463,"mtime":1646328798914,"results":"146","hashOfConfig":"96"},{"size":817,"mtime":1646328772449,"results":"147","hashOfConfig":"96"},{"size":169,"mtime":1646328798910,"results":"148","hashOfConfig":"96"},{"size":267,"mtime":1646660978419,"results":"149","hashOfConfig":"96"},{"size":307,"mtime":1646403562896,"results":"150","hashOfConfig":"96"},{"size":323,"mtime":1646328772477,"results":"151","hashOfConfig":"96"},{"size":313,"mtime":1646422654339,"results":"152","hashOfConfig":"96"},{"size":5557,"mtime":1646677652787,"results":"153","hashOfConfig":"96"},{"size":3930,"mtime":1646677112763,"results":"154","hashOfConfig":"96"},{"size":1309,"mtime":1646680329283,"results":"155","hashOfConfig":"96"},{"size":284,"mtime":1646328798910,"results":"156","hashOfConfig":"96"},{"size":766,"mtime":1646657387379,"results":"157","hashOfConfig":"96"},{"size":799,"mtime":1646675612767,"results":"158","hashOfConfig":"96"},{"size":257,"mtime":1646740994601,"results":"159","hashOfConfig":"96"},{"size":721,"mtime":1646675727782,"results":"160","hashOfConfig":"96"},{"size":265,"mtime":1646676498776,"results":"161","hashOfConfig":"96"},{"size":461,"mtime":1646677086114,"results":"162","hashOfConfig":"96"},{"size":797,"mtime":1646675670535,"results":"163","hashOfConfig":"96"},{"size":1467,"mtime":1646682474842,"results":"164","hashOfConfig":"96"},{"size":1586,"mtime":1646681609633,"results":"165","hashOfConfig":"96"},{"size":4164,"mtime":1646743089305,"results":"166","hashOfConfig":"96"},{"size":1181,"mtime":1646681609633,"results":"167","hashOfConfig":"96"},{"size":2700,"mtime":1646682149728,"results":"168","hashOfConfig":"96"},{"size":502,"mtime":1646681609641,"results":"169","hashOfConfig":"96"},{"size":1798,"mtime":1646681609641,"results":"170","hashOfConfig":"96"},{"size":1149,"mtime":1646742370716,"results":"171","hashOfConfig":"96"},{"size":660,"mtime":1646681609641,"results":"172","hashOfConfig":"96"},{"size":655,"mtime":1646742154837,"results":"173","hashOfConfig":"96"},{"size":2879,"mtime":1646743089305,"results":"174","hashOfConfig":"96"},{"size":657,"mtime":1646681609641,"results":"175","hashOfConfig":"96"},{"size":1380,"mtime":1646681609641,"results":"176","hashOfConfig":"96"},{"size":3035,"mtime":1646681609641,"results":"177","hashOfConfig":"96"},{"size":1728,"mtime":1646681609629,"results":"178","hashOfConfig":"96"},{"size":1114,"mtime":1646681609629,"results":"179","hashOfConfig":"96"},{"size":2455,"mtime":1646742900375,"results":"180","hashOfConfig":"96"},{"size":497,"mtime":1646742389544,"results":"181","hashOfConfig":"96"},{"size":321,"mtime":1646657381242,"results":"182","hashOfConfig":"96"},{"size":3708,"mtime":1646743089305,"results":"183","hashOfConfig":"96"},{"size":2793,"mtime":1646743089305,"results":"184","hashOfConfig":"96"},{"size":3340,"mtime":1646743089305,"results":"185","hashOfConfig":"96"},{"size":1082,"mtime":1646743089305,"results":"186","hashOfConfig":"96"},{"size":2101,"mtime":1646743089305,"results":"187","hashOfConfig":"96"},{"size":1090,"mtime":1646743089305,"results":"188","hashOfConfig":"96"},{"size":999,"mtime":1646743089305,"results":"189","hashOfConfig":"96"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"k1bpnf",{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"192"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"192"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"192"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"192"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"192"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"192"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"192"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"192"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"192"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"192"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"192"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"192"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"192"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"192"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"192"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"192"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"192"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"192"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"192"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"192"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"192"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"192"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"192"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"192"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"192"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"192"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"332"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"192"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"192"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"192"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"192"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"192"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"192"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"192"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"192"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"192"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"192"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"192"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"192"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"192"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"192"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ryan/Desktop/Trabalho/presper-daher/src/index.js",[],["421","422"],"/home/ryan/Desktop/Trabalho/presper-daher/src/reportWebVitals.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/App.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/pages/Login/Login.jsx",["423","424","425","426","427","428","429","430","431"],"import { createContext, useState, useEffect, useContext } from \"react\";\nimport { useLoginPage } from \"../../services/Hooks/LoginPageHook\";\nimport Image from \"react-bootstrap/Image\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\n\nimport \"./Login.styles.css\";\n\nimport google from \"../../assets/google-logo.png\";\nimport facebook from \"../../assets/facebook-logo.png\";\nimport login from \"../../services/user/login\";\nimport { toast } from \"react-toastify\";\n\nfunction Login() {\n\n  // const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [lembrarSenha, setLembrarSenha] = useState(false);\n\n  // const [showAlert, setShowAlert] = useState(false);\n\n  async function handleSubmit() {\n    try {\n\n      let isOk = await login(email, senha)\n      isOk == 'ok' ? window.location.pathname = '' : toast.error(\"Login incorreto!\")\n\n    }\n    catch (error) {\n\n      toast.error(error)\n      console.error(error);\n\n    }\n  }\n\n\n  useEffect(() => {\n    setShowAlert(false);\n  }, []);\n\n  const {\n    email,\n    setEmail,\n    setPassword,\n    isRememberPassword,\n    rememberPassword,\n    showAlert,\n    setShowAlert,\n    facebookLogin,\n    googleLogin,\n    login,\n  } = useLoginPage();\n\n  return (\n    <div className=\"container-login\">\n      <section>\n        <div className=\"card p-5\">\n          <h2 className=\"title-card\">Login</h2>\n\n          <div>\n            {showAlert && (\n              <Alert variant=\"danger\">\n                Ops! Não foi possível encontrar o usuário. Cheque suas\n                informações e tente novamente.\n              </Alert>\n            )}\n          </div>\n\n          <form\n            className=\"row g-3 d-flex flex-column\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              // handleSubmit();\n              login();\n            }}\n          >\n            <br />\n            <button\n              className=\"btn btn-lg\"\n              id=\"social-login\"\n              onClick={(e) => {\n                e.preventDefault();\n                googleLogin();\n              }}\n            >\n              <Image src={google} alt=\"google-log\" className=\"logo\" /> Continuar\n              com Google\n            </button>\n            <button\n              className=\"btn btn-lg\"\n              id=\"social-login\"\n              onClick={facebookLogin}\n            >\n              <Image src={facebook} alt=\"google-log\" className=\"logo\" />{\" \"}\n              Continuar com Facebook\n            </button>\n            <br />\n            <input\n              type=\"email\"\n              className=\"form\"\n              placeholder=\"Email\"\n              required\n              name=\"email\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <input\n              type=\"password\"\n              className=\"form\"\n              placeholder=\"Senha\"\n              required\n              name=\"senha\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                value=\"\"\n                id=\"flexCheckDefault\"\n                onChange={() => isRememberPassword(!rememberPassword)}\n              ></input>\n\n              <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                Lembrar minha senha\n              </label>\n            </div>\n\n            <Button type=\"submit\" id=\"btn-login\">\n              Acessar\n            </Button>\n\n            <a href=\"/\" style={{ color: \"#14B8A6\" }}>\n              Esqueceu a senha?\n            </a>\n            <a href=\"/signup\" style={{ color: \"#14B8A6\" }}>\n              Não possui uma conta? Registre-se\n            </a>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/CourseDetails/CourseDetails.jsx",["432"],"import \"./CourseDetails.styles.css\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport ReactStars from \"react-rating-stars-component\";\nimport RatingCard from \"../../componentes/RatingCard/RatingCard\";\nimport { Button, Container, Row, Col, ListGroup, Image } from \"react-bootstrap\";\nimport { BsFillAwardFill, BsFillCameraVideoFill } from \"react-icons/bs\";\n\nimport { CartContext } from \"../../contexts/CartContext/CartContext\";\n\nconst axios = require(\"axios\").default;\n\nfunction CourseDetails() {\n  const { id } = useParams();\n\n  const [course, setCourse] = useState({});\n\n  const { addItemToCart } = useContext(CartContext);\n\n  async function getCourse() {\n    const url = \"https://fake-api-json-server-presper.herokuapp.com/cursos\";\n    axios.get(`${url}/${id}`).then((res) => {\n      if (res.status === 200) setCourse(res.data);\n    });\n  }\n\n  useEffect(() => {\n    getCourse();\n  }, []);\n\n  return (\n    <>\n      <div className=\"head-container\">\n        <Container id=\"course-info\">\n          <div className=\"info-container\">\n            <h2>{course.title}</h2>\n            <h5>{course.category}</h5>\n            <h6>{course.author}</h6>\n            <h6>\n              <div className=\"certificate-container\">\n                <BsFillAwardFill size=\"1em\" style={{ color: \"#CFB53B\" }} />{\" \"}\n                Certificado\n              </div>\n            </h6>\n            <ReactStars value={course.rating} edit={false} size={18} />\n            <h6>999 vendidos</h6>\n\n            <h6 style={{ fontSize: \"24px\", color: \"#6CB1CF\" }}>\n              R$ {course.price}\n            </h6>\n          </div>\n          <div className=\"img-btn-container\">\n            <Image src={course.img} id=\"course-img\" />\n            <Button id=\"btn-add-cart\" onClick={() => addItemToCart(course)}>\n              Adicionar ao carrinho\n            </Button>\n          </div>\n        </Container>\n      </div>\n      <Container id=\"content-container\">\n        <div className=\"content-item\">\n          <Col>\n            <h2>Descrição</h2>\n            <p>{course.description}</p>\n          </Col>\n        </div>\n        <div className=\"content-item\">\n          <Col id=\"videos-col\">\n            <h2>Conteúdo</h2>\n            <p>Confira todo o conteúdo disponível nesse curso</p>\n\n            <ListGroup\n              className=\"videos-list\"\n              as=\"ol\"\n              numbered\n              style={{ maxWidth: \"540px\" }}\n            >\n              {course.videos?.map((item, id) => {\n                return (\n                  <ListGroup.Item id=\"list-item\" as=\"li\" key={id}>\n                    {item} <BsFillCameraVideoFill />\n                  </ListGroup.Item>\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </div>\n        <div className=\"content-item\">\n          <Col>\n            <h2>Avaliações</h2>\n            <p>Veja o que estão falando sobre esse curso</p>\n\n            {course.ratingComents?.map((item) => (\n              <Row>\n                <Col key={item.id}>\n                  <RatingCard\n                    img={item.img}\n                    author={item.author}\n                    text={item.text}\n                    rating={item.rating}\n                  />\n                </Col>\n              </Row>\n            ))}\n          </Col>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default CourseDetails;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/Admin/Admin.jsx",["433","434"],"/home/ryan/Desktop/Trabalho/presper-daher/src/pages/MyCourses/MyCourses.jsx",["435"],"import React, { useState, useEffect } from \"react\";\n\nimport \"./MyCourses.styles.css\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport MyCoursesCardComponent from \"../../componentes/MyCoursesCard/MyCoursesCard\";\n\nimport cursos from \"../../data/cursos\";\nimport categorias from \"../../data/categorias\";\n\nfunction MyCourses() {\n  const [classificar, setClassificar] = useState(\"Título: A a Z\");\n  const [filtro, setFiltro] = useState(\"Sem filtro\");\n  const [buscarCurso, setBuscarCurso] = useState(\"\");\n\n  const [courseList, setCourseList] = useState([]);\n\n  useEffect(() => {\n    classificarPor(classificar);\n    filtrarPor(filtro);\n  }, [classificar, filtro]);\n\n  useEffect(() => {\n    buscarPor(buscarCurso);\n  }, [buscarCurso]);\n\n  function classificarPor(classificar) {\n    let sortedList = [];\n    if (classificar === \"Título: A a Z\") {\n      sortedList = cursos.sort((a, b) => {\n        return a.title.localeCompare(b.title);\n      });\n    } else {\n      sortedList = cursos.sort((a, b) => {\n        return b.title.localeCompare(a.title);\n      });\n    }\n    console.log(sortedList);\n    setCourseList(sortedList);\n  }\n\n  function filtrarPor(filtro) {\n    if (filtro !== \"Sem filtro\")\n      setCourseList(cursos.filter((c) => c.category === filtro));\n    else setCourseList(cursos);\n  }\n\n  function buscarPor(buscarCurso) {\n    setCourseList(\n      // eslint-disable-next-line array-callback-return\n      cursos.filter((val) => {\n        if (!buscarCurso.length) {\n          setFiltro(filtro);\n          return val;\n        } else if (\n          filtro === \"Sem filtro\" &&\n          val.title.toLowerCase().includes(buscarCurso.toLowerCase())\n        ) {\n          return val;\n        } else if (\n          val.category === filtro &&\n          val.title.toLowerCase().includes(buscarCurso.toLowerCase())\n        ) {\n          return val;\n        }\n      })\n    );\n  }\n\n  return (\n    <>\n      <Container>\n        <Container fluid>\n          <div className=\"container-item\">\n            <Row className=\"row-novo-curso\">\n              <Col>\n                <h2>Meus Cursos</h2>\n                <p>Vizualize os seus cursos adquiridos</p>\n              </Col>\n            </Row>\n          </div>\n          <hr></hr>\n          <div className=\"container-filtro\">\n            <div className=\"filtro-item\">\n              <Form.Label column className=\"label\">\n                Pesquisar\n              </Form.Label>\n\n              <Form\n                // className=\"search-bar\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                }}\n              >\n                <FormControl\n                  size=\"sm\"\n                  type=\"search\"\n                  placeholder=\"Pesquisar cursos\"\n                  className=\"search-bar\"\n                  id=\"search-bar-my-account\"\n                  aria-label=\"Search\"\n                  onChange={(e) => {\n                    setBuscarCurso(e.target.value);\n                  }}\n                />\n              </Form>\n            </div>\n            <div className=\"filtros-container\">\n              <div className=\"filtro-item\">\n                <Form.Label column className=\"label\">\n                  Classificar por\n                </Form.Label>\n                <Dropdown>\n                  <Dropdown.Toggle\n                    size=\"sm\"\n                    style={{\n                      backgroundColor: \"#fff\",\n                      border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                      color: \"#000\",\n                      width: \"160px\",\n                    }}\n                  >\n                    {classificar}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={() => setClassificar(\"Título: A a Z\")}\n                    >\n                      Título: A a Z\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={() => setClassificar(\"Título: Z a A\")}\n                    >\n                      Título: Z a A\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n              <div className=\"filtro-item\">\n                <Form.Label column className=\"label\">\n                  Filtrar por categoria\n                </Form.Label>\n                <Dropdown>\n                  <Dropdown.Toggle\n                    size=\"sm\"\n                    style={{\n                      backgroundColor: \"#fff\",\n                      border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                      color: \"#000\",\n                      width: \"160px\",\n                    }}\n                  >\n                    {filtro}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    <Dropdown.Item onClick={() => setFiltro(\"Sem filtro\")}>\n                      Sem filtro\n                    </Dropdown.Item>\n                    {categorias?.map((item, id) => {\n                      return (\n                        <Dropdown.Item\n                          onClick={() => setFiltro(item.value)}\n                          key={id}\n                        >\n                          {item.value}\n                        </Dropdown.Item>\n                      );\n                    })}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div className=\"container-item\" id=\"cursos-list\">\n          <div className=\"courses-container\">\n            {courseList?.map((item) => (\n              <MyCoursesCardComponent\n                key={item.id}\n                img={item.img}\n                title={item.title}\n                author={item.author}\n                rating={item.rating}\n                onClick={() => {\n                  //   setCourse(item);\n                  //   showEditCourseModal(true);\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default MyCourses;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/Perfil/Perfil.jsx",["436","437","438"],"import React, { useState, useEffect } from \"react\";\n\nimport \"./Perfil.styles.css\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport MaskedInput from \"react-maskedinput\";\n\nimport { BsPencilFill } from \"react-icons/bs\";\nimport loadUser from \"../../services/user/loadUser\";\nimport { token } from \"../../services/api\";\nimport updateUser from \"../../services/user/updateUser\";\nimport { toast } from \"react-toastify\";\n\nconst axios = require(\"axios\").default;\n\nfunction Perfil(props) {\n  const [hasError, setHasError] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [user, setUser] = useState({});\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [profession, setProfession] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [pic, setPic] = useState(\"\");\n\n  const hiddenFileInput = React.useRef(null);\n\n  const handleClick = (event) => {\n    hiddenFileInput.current.click();\n  };\n\n  const handleChange = (event) => {\n    const fileUploaded = event.target.files[0];\n    // props.handleFile(fileUploaded);\n    setPic(fileUploaded);\n  };\n  \n  async function handleLoadUser(){\n    const loggedInUser = await loadUser(token)\n\n    if (!loggedInUser) {\n      toast.error(\"Usuário não encontrado, tente recarregar a página, por favor\")\n      return\n    }\n\n    setUser(loggedInUser);\n    \n\n  }\n\n  async function handleUpdateUser(){\n    const id = user.id;\n    const data = {\n      name:       name       || user.name,\n      email:      email      || user.email,\n      phone:      phone      || user.phone,\n      profession: profession || user.profession,\n      bio:        bio        || user.bio,\n      pic:        pic        || user.pic,\n    };\n\n    console.log(data);\n    console.log(user);\n\n    try {\n      //uses token from localStorage, which is setted in login and singup\n      let updatedUser = updateUser(id, data)\n    }\n\n    catch (error) {\n      setHasError(true);\n      console.log(error);\n    }\n\n  }\n\n  const handleSubmit = () => {\n    handleUpdateUser()\n  };\n\n\n  useEffect(() => {\n    handleLoadUser()\n  }, []);\n\n  // useEffect(() => {}, [user]);\n\n  return (\n    <>\n      <Container>\n        <Container fluid className=\"container-perfil\">\n          <div className=\"container-item\">\n            <Row>\n              <Col>\n                <h2>Meu Perfil</h2>\n                <p>Altere sua informações pessoais</p>\n              </Col>\n            </Row>\n          </div>\n          <hr></hr>\n          <div className=\"container-content\">\n            <div className=\"pic-section\">\n              <Image className=\"img\" roundedCircle src={user.pic}></Image>\n              <button className=\"btn\" onClick={handleClick}>\n                Editar <BsPencilFill />\n              </button>\n              <Form.Control\n                type=\"file\"\n                ref={hiddenFileInput}\n                onChange={handleChange}\n                style={{ display: \"none\" }}\n              />\n            </div>\n            <div className=\"form-section\">\n              <Form className=\"form\">\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label column sm=\"5\">\n                    Nome completo\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    defaultValue={user.name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label column sm=\"5\">\n                    Email\n                  </Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    defaultValue={user.email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label column sm=\"5\">\n                    Telefone\n                  </Form.Label>\n                  {/* <Form.Control\n                    type=\"text\"\n                    defaultValue={user.phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                  /> */}\n                  <MaskedInput\n                    className=\"masked-input\"\n                    type=\"text\"\n                    name=\"phoneNumber\"\n                    mask=\"(11) 11111-1111\"\n                    value={user.phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label column sm=\"5\">\n                    Profissão\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    defaultValue={user.profession}\n                    onChange={(e) => setProfession(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlTextarea1\"\n                >\n                  <Form.Label column sm=\"5\">\n                    Biografia\n                  </Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={4}\n                    defaultValue={user.bio}\n                    onChange={(e) => setBio(e.target.value)}\n                  />\n                </Form.Group>\n\n                <div className=\"container-btn\">\n                  <Button\n                    style={{\n                      backgroundColor: \"#14B8A6\",\n                      border: \"none\",\n                      boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n                      color: \"white\",\n                    }}\n                    onClick={() => {\n                      handleSubmit();\n                    }}\n                  >\n                    SALVAR\n                  </Button>\n                </div>\n                <div>\n                  {showAlert && (\n                    <Alert variant={hasError ? \"danger\" : \"success\"}>\n                      {hasError\n                        ? \"Ops! Ocorreu um erro ao alterar suas informações. Tente novamente.\"\n                        : \"Suas informações foram alteradas com sucesso!\"}\n                    </Alert>\n                  )}\n                </div>\n              </Form>\n            </div>\n          </div>\n        </Container>\n      </Container>\n    </>\n  );\n}\n\nexport default Perfil;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/MyCertificates/MyCertificates.jsx",["439","440"],"import React, { useState, useEffect } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport CertificateCard from \"../../componentes/CertificateCard/CertificateCard\";\n\nimport \"./MyCertificates.styles.css\";\n\nimport cursos from \"../../data/cursos\";\n\nfunction MyCertificates() {\n  const certificates = cursos;\n\n  const [classificar, setClassificar] = useState(\"Título: A a Z\");\n  const [filtro, setFiltro] = useState(\"Sem filtro\");\n  const [buscarCurso, setBuscarCurso] = useState(\"\");\n\n  const [certificatesList, setCertificatesList] = useState([]);\n\n  useEffect(() => {\n    classificarPor(classificar);\n    filtrarPor(filtro);\n  }, [classificar, filtro]);\n\n  useEffect(() => {\n    buscarPor(buscarCurso);\n  }, [buscarCurso]);\n\n  function classificarPor(classificar) {\n    let sortedList = [];\n    if (classificar === \"Título: A a Z\") {\n      sortedList = certificates.sort((a, b) => {\n        return a.title > b.title;\n      });\n    } else {\n      sortedList = certificates.sort((a, b) => {\n        return a.title < b.title;\n      });\n    }\n    console.log(sortedList);\n    setCertificatesList(sortedList);\n  }\n\n  function filtrarPor(filtro) {\n    if (filtro !== \"Sem filtro\")\n      setCertificatesList(certificates.filter((c) => c.category === filtro));\n    else setCertificatesList(certificates);\n  }\n\n  function buscarPor(buscarCurso) {\n    setCertificatesList(\n      // eslint-disable-next-line array-callback-return\n      certificates.filter((val) => {\n        if (!buscarCurso.length) {\n          setFiltro(filtro);\n          return val;\n        } else if (\n          filtro === \"Sem filtro\" &&\n          val.title.toLowerCase().includes(buscarCurso.toLowerCase())\n        ) {\n          return val;\n        } else if (\n          val.category === filtro &&\n          val.title.toLowerCase().includes(buscarCurso.toLowerCase())\n        ) {\n          return val;\n        }\n      })\n    );\n  }\n  return (\n    <>\n      <Container>\n        <Container fluid className=\"container-my-certificates\">\n          <div className=\"container-item\">\n            <Row className=\"row-novo-curso\">\n              <Col>\n                <h2>Meus Certificados</h2>\n                <p>Vizualize os seus certificados de conclusão de curso</p>\n              </Col>\n            </Row>\n          </div>\n          <hr></hr>\n          <div className=\"container-filtro\">\n            <div className=\"filtro-item\">\n              <Form.Label column sm=\"6\">\n                Pesquisar\n              </Form.Label>\n              <Form className=\"search-bar\">\n                <FormControl\n                  size=\"sm\"\n                  type=\"search\"\n                  placeholder=\"Pesquisar cursos\"\n                  className=\"search-bar\"\n                  id=\"search-bar-my-account\"\n                  aria-label=\"Search\"\n                  onChange={(e) => {\n                    setBuscarCurso(e.target.value);\n                  }}\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                  }}\n                />\n              </Form>\n            </div>\n            <div className=\"filtro-item\">\n              <Form.Label column sm=\"11\">\n                Classificar por\n              </Form.Label>\n              <Dropdown>\n                <Dropdown.Toggle\n                  size=\"sm\"\n                  style={{\n                    backgroundColor: \"#fff\",\n                    border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                    color: \"#000\",\n                    width: \"160px\",\n                    marginLeft: \"0px\",\n                  }}\n                >\n                  {classificar}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    onClick={() => setClassificar(\"Título: A a Z\")}\n                  >\n                    Título: A a Z\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    onClick={() => setClassificar(\"Título: Z a A\")}\n                  >\n                    Título: Z a A\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n            {/* <div className=\"filtro-item\">\n              <Form.Label column sm=\"10\">\n                Filtrar por categoria\n              </Form.Label>\n              <Dropdown>\n                <Dropdown.Toggle\n                  size=\"sm\"\n                  style={{\n                    backgroundColor: \"#fff\",\n                    border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                    color: \"#000\",\n                    width: \"200px\",\n                  }}\n                >\n                  {filtro}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={() => setFiltro(\"Sem filtro\")}>\n                    Sem filtro\n                  </Dropdown.Item>\n                  {certificates?.map((item, id) => {\n                    return (\n                      <Dropdown.Item\n                        onClick={() => setFiltro(item.value)}\n                        key={id}\n                      >\n                        {item.category}\n                      </Dropdown.Item>\n                    );\n                  })}\n                </Dropdown.Menu>\n              </Dropdown>\n            </div> */}\n          </div>\n        </Container>\n        <div className=\"container-item\" id=\"cursos-list\">\n          <div className=\"courses-container\">\n            {certificatesList?.map((item) => (\n              <CertificateCard\n                key={item.id}\n                title={item.title}\n                author={item.author}\n                onClick={() => {\n                  //   setCourse(item);\n                  //   showEditCourseModal(true);\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default MyCertificates;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Footer/Footer.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/pages/MyPaymentInfo/MyPaymentInfo.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Header/Header.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/pages/Home/Home.jsx",["441","442","443","444","445"],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Carousel,\n  Col,\n  Form,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\n\nimport MaskedInput from \"react-maskedinput\";\nimport CardComponent from \"../../componentes/Card/Card\";\nimport CommentsCard from \"../../componentes/CommentsCard/CommentsCard\";\n\nimport { useCourse } from \"../../contexts/CourseContext\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport MessageService from \"../../services/MessageService\";\n\nimport \"./Home.style.css\";\nimport cursoLoad from \"../../services/curso/cursoLoad\";\nimport loadPergunta from \"../../services/pergunta/perguntaLoad\";\nimport bannerLoad from \"../../services/banner/bannerLoad\";\n\nconst axios = require(\"axios\").default;\n\nfunction Home() {\n  const { allCourses } = useCourse();\n  const { user } = useAuth();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const [msgSent, isMsgSent] = useState(false);\n  const [msgResult, isMsgResult] = useState(false);\n\n  const [coursesList,     setCoursesList    ] = useState([]);\n\n  const [bannerList,      setBannerList     ] = useState([]);\n  \n  const [testimonialsList, setTestimonialsList] = useState([]);\n\n  const navigate = useNavigate();\n\n  function handleClick(id) {\n    navigate(`/course/${id}`);\n  }\n\n  async function handleSubmit() {\n    const data = {\n      name:    name,\n      email:   email,\n      phone:   phone,\n      message: message,\n    }\n  }\n  const createMessage = async () => {\n    let userId = null;\n    if (user) userId = user.id;\n    const body = {\n      userId,\n      userName: name,\n      userEmail: email,\n      userPhone: phone,\n      messageContent: message,\n    };\n\n    try {\n      const response = await MessageService.createMessage(body);\n      isMsgSent(true);\n      if (response.status === 201) {\n        isMsgResult(true);\n      } else {\n        isMsgResult(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n\n    setName(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n    setMessage(\"\");\n  }\n  async function getCourses() {\n\n    let cursos = await cursoLoad()\n\n    setCoursesList(cursos)\n  }\n\n  async function getBanners(){\n    let banner = await bannerLoad()\n\n    setBannerList(banner)\n\n  }\n  // setTimeout(() => {\n  //     isMsgSent(false);\n  //   }, 6000);\n  // };\n\n  //todo -> pegando da FAKE API, precisa mudar!\n  async function getComments() {\n    const url =\n      \"https://fake-api-json-server-presper.herokuapp.com/depoimentos\";\n    axios.get(url).then((res) => {\n      if (res.status === 200) {\n        setTestimonialsList(res.data);\n      }\n    });\n    let perguntas = await loadPergunta()\n    setTestimonialsList(perguntas)\n  }\n\n  useEffect(() => {\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n    isMsgSent(false);\n\n    getComments();\n    getBanners();\n  }, []);\n\n\n  return (\n    <>\n      <div className=\"home-container\">\n        <Container fluid className=\"carousel-container\">\n          <Row>\n            <Carousel fade className=\"carousel\">\n              {\n              bannerList.map(({ imagemUrl, titulo, descricao, nome}) => (\n              <Carousel.Item>\n                <img\n                  className=\"d-block w-100\"\n                  src={imagemUrl}\n                  alt={nome}\n                />\n\n                <Carousel.Caption>\n                  <h3>\n                    {\n                    titulo\n                    }\n                  </h3>\n                  <p>\n                    {\n                      descricao\n                    }\n                  </p>\n                </Carousel.Caption>\n              </Carousel.Item>\n              ) )\n              }\n            </Carousel>\n          </Row>\n        </Container>\n\n\n        <br />\n        <Container>\n          <div className=\"container-item\">\n            <Row>\n              <Col>\n                <h2>Cursos populares</h2>\n                <p>Os melhores cursos para você estudar quando e onde quiser</p>\n              </Col>\n            </Row>\n          </div>\n          <hr />\n\n          <div className=\"container-item\">\n            <div className=\"courses-container\">\n              {allCourses?.map((item, id) => (\n                <Link\n                  key={item.id}\n                  id=\"card-link\"\n                  to={{\n                    pathname: `/course-details/${item.id}`,\n                    state: { course: item },\n                  }}\n                >\n                  <CardComponent\n                    key={item.id}\n                    img={item.imagemUrl}\n                    title={item.nome}\n                    author={item.autor}\n                    rating={item.rating}\n                    price={item.preco}\n                    sold={item.sold}\n                  />\n                </Link>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"container-item\">\n            <Row>\n              <Col>\n                <h2>Depoimentos</h2>\n                <p>Veja o que estão falando sobre nós</p>\n              </Col>\n            </Row>\n          </div>\n          <hr />\n          <div className=\"container-item\">\n            <div>\n              {testimonialsList?.map((item) => (\n                <Row key={item.id}>\n                  <Col>\n                    <CommentsCard\n                      img={item.img}\n                      author={item.author}\n                      text={item.text}\n                      onClick={() =>\n                        console.log(\"Clicou no card de ID:\", item.id)\n                      }\n                    />\n                  </Col>\n                </Row>\n              ))}\n            </div>\n          </div>\n          <div className=\"container-item\" id=\"contact-us\">\n            <Row>\n              <Col>\n                <h2>Fale Conosco</h2>\n                <p>Entre em contato e nos deixe saber o que está achando</p>\n              </Col>\n            </Row>\n          </div>\n          <div className=\"contact-us-container\">\n            <div id=\"form\">\n              <Form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  createMessage();\n                }}\n              >\n                <Form.Group className=\"mb-3\">\n                  <Form.Label column sm=\"2\">\n                    Nome\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Nome\"\n                    onChange={(e) => setName(e.target.value)}\n                    value={name}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label column sm=\"2\">\n                    Email\n                  </Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    value={email}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label column sm=\"2\">\n                    Telefone\n                  </Form.Label>\n                  <MaskedInput\n                    className=\"masked-input\"\n                    type=\"text\"\n                    name=\"phoneNumber\"\n                    mask=\"(11) 11111-1111\"\n                    placeholder=\"(xx) xxxxx-xxxx\"\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlTextarea1\"\n                >\n                  <Form.Label column sm=\"2\">\n                    Mensagem\n                  </Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={3}\n                    placeholder=\"Mensagem\"\n                    onChange={(e) => setMessage(e.target.value)}\n                    value={message}\n                    required\n                  />\n                </Form.Group>\n                <Button\n                  style={{\n                    backgroundColor: \"#14B8A6\",\n                    border: \"none\",\n                    boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n                  }}\n                  type=\"submit\"\n                >\n                  Enviar\n                </Button>\n              </Form>\n              <br />\n              {msgSent && (\n                <Alert variant={msgResult ? \"success\" : \"danger\"}>\n                  {msgResult\n                    ? \"Sua mensagem foi enviada com sucesso!\"\n                    : \"Ops! Ocorreu um erro ao enviar sua mensagem. Tente novamente.\"}\n                </Alert>\n              )}\n            </div>\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/Signup/Signup.jsx",["446","447","448","449","450","451","452","453","454","455","456"],"import { createContext, useState, useEffect, useContext } from \"react\";\nimport { useSignupPage } from \"../../services/Hooks/SignupPageHook\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport \"./Signup.styles.css\";\nimport { toast } from \"react-toastify\";\nimport cadastro from \"../../services/user/cadastro\";\n\nfunction Signup() {\n  const [nome, setNome] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [confirmaSenha, setConfirmaSenha] = useState(\"\");\n  const [inscricao, setInscricao] = useState(false);\n  const [submit, isSubmit] = useState(false);\n\n  // const [showAlert, setShowAlert] = useState(false);\n\n\n  async function handleSubmit() {\n    if (submit && senha === confirmaSenha) {\n\n      try {\n\n        let isOk = await cadastro(nome, email, senha, '1')\n        isOk == 'ok'? window.location.pathname = '' : console.log(\"erro?\")\n\n      }\n      catch (error) {\n        console.error(error);\n      }\n      isSubmit(false);\n    }\n  }\n\n  useEffect(() => {\n    setShowAlert(false);\n  }, []);\n  const {\n    signUp,\n    setName,\n    setEmail,\n    email,\n    password,\n    setPassword,\n    confirmPassword,\n    setConfirmPassword,\n    subscribed,\n    isSubscribed,\n    submited,\n    isSubmited,\n    showAlert,\n    setShowAlert,\n  } = useSignupPage();\n\n  return (\n    <>\n      <div className=\"container-signup\">\n        <section>\n          <div className=\"card p-5\">\n            <h2 className=\"title-card\">Sign up</h2>\n            {submited && password !== confirmPassword && (\n              <Alert variant=\"danger\">As senhas são inválidas!</Alert>\n            )}\n            {showAlert && (\n              <Alert variant=\"danger\">\n                Ops! Parece que você já está cadastrado em nossa plataforma.\n                Faça o login para acessar sua conta.\n              </Alert>\n            )}\n            <form className=\"row g-3 d-flex flex-column\"\n            onSubmit={() => handleSubmit()}\n            >\n              <input\n                type=\"text\"\n                className=\"form\"\n                placeholder=\"Nome\"\n                required\n                name=\"nome\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n              <input\n                type=\"email\"\n                className=\"form\"\n                placeholder=\"Email\"\n                required\n                name=\"email\"\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n              <input\n                type=\"password\"\n                className=\"form\"\n                placeholder=\"Senha\"\n                required\n                name=\"senha\"\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n              <input\n                type=\"password\"\n                className=\"form\"\n                placeholder=\"Confirmar senha\"\n                required\n                name=\"confirmar-senha\"\n                onChange={(e) => {\n                  setConfirmPassword(e.target.value);\n                }}\n              />\n\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  value=\"\"\n                  id=\"flexCheckDefault\"\n                  onChange={() => isSubscribed(!subscribed)}\n                  style={{\n                    border: \"1px solid #14B8A6\",\n                    backgroundColor: `${subscribed ? \"#14B8A6\" : \"\"}`,\n                  }}\n                ></input>\n\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                  Aceito receber emails com descontos e recomendações de\n                  produtos\n                </label>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-lg\"\n                style={{ background: \"#14B8A6\", border: \"none\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.persist();\n                  isSubmited(true);\n                  // signUp();\n                }}\n              >\n                Cadastrar\n              </button>\n\n              <a href=\"/login\" style={{ color: \"#14B8A6\" }}>\n                Já tem uma conta? Faça o Login\n              </a>\n            </form>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n\nexport default Signup;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/pages/ShoppingCart/ShoppingCart.jsx",["457"],"import { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CartContext } from \"../../contexts/CartContext/CartContext\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\nimport ProductCard from \"../../componentes/ProductCard/ProductCard\";\n\nimport emptyCart from \"../../assets/empty-cart.svg\";\n\nimport \"./ShoppingCart.styles.css\";\n\nfunction ShoppingCart() {\n  const [prodRemoved, isProdRemoved] = useState(false);\n  const { cart, removeItemFromCart, getCart, getTotalAmount } =\n    useContext(CartContext);\n\n  const [prods, setProds] = useState(cart);\n\n  useEffect(() => {\n    setProds(cart);\n    setTimeout(() => {\n      isProdRemoved(false);\n    }, 6000);\n  }, [cart]);\n\n  return (\n    <>\n      <Container id=\"main-container\">\n        <div>\n          <Row className=\"page-title\">\n            <Col>\n              <h2>Meu carrinho</h2>\n              <p>Vizualize os produtos adicionados ao seu carrinho de compra</p>\n            </Col>\n          </Row>\n          {prodRemoved && (\n            <Alert variant=\"success\">\n              Produto removido do carrinho com sucesso!\n            </Alert>\n          )}\n        </div>\n        <hr />\n        {prods.length > 0 ? (\n          <div className=\"container-content\">\n            <div className=\"container-prods\">\n              {prods?.map((prod, id) => {\n                return (\n                  <ProductCard\n                    key={id}\n                    title={prod.title}\n                    author={prod.author}\n                    category={prod.category}\n                    price={prod.price}\n                    onClick={() => {\n                      removeItemFromCart(prod.id);\n                      isProdRemoved(true);\n                    }}\n                  />\n                );\n              })}\n            </div>\n            <div className=\"container-checkout\">\n              <div className=\"checkout-card\">\n                <div className=\"card-title\">Checkout</div>\n                {prods?.map((prod, idx) => {\n                  return (\n                    <div className=\"card-prod-list\" key={idx}>\n                      <div id=\"prod-title\">{prod.title}</div>\n                      <div id=\"prod-price\">R$ {prod.price}</div>\n                    </div>\n                  );\n                })}\n                <hr />\n                <div className=\"card-total-container\">\n                  <div id=\"total-title\">Total</div>\n                  <div id=\"total-amount\">R$ {getTotalAmount()}</div>\n                </div>\n\n                <button className=\"buy-btn\">COMPRAR</button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"container-empty-card\">\n            <div className=\"empty-cart-card\">\n              <Image\n                src={emptyCart}\n                alt=\"carrinho vazio\"\n                id=\"empty-cart-card-img\"\n              />\n              <div className=\"card-title\">Seu carrinho está vazio!</div>\n              <div className=\"card-text\">\n                Você não possui nenhum produto adicionado ao seu carrinho.\n              </div>\n              <Link to=\"/\">\n                <Button id=\"card-button\">Comprar agora</Button>\n              </Link>\n            </div>\n          </div>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default ShoppingCart;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/data/cursos.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/data/categorias.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/RatingCard/RatingCard.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AdminComunication/AdminComunication.jsx",["458"],"import { useState, useEffect } from \"react\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Dropdown,\n  Form,\n  Badge,\n} from \"react-bootstrap\";\n\nimport MessageModal from \"../Modals/MessageModal\";\n\nimport { BsFillEyeFill } from \"react-icons/bs\";\n\nimport \"./AdminComunication..style.css\";\nimport mensagens from \"../../data/mensagens\";\nimport cursos from \"../../data/cursos\";\n\n//*\n//TODO - 1. arrrumar os filtros\n//TODO - 2. fazer a integração consumindo os dados do back\n//*\n\nfunction Comunication() {\n  const courses = cursos;\n\n  // const [buscarCurso, setBuscarCurso] = useState(\"\");\n\n  // const [createCourseModal, showCreateCourseModal] = useState(false);\n  // const [course, setCourse] = useState({});\n\n  // const [courseList, setCourseList] = useState([]);\n\n  const [messagesList, setMessagesList] = useState([]);\n\n  const [messageModalShow, setMessageModalShow] = useState(false);\n  const [message, setMessage] = useState({});\n\n  const [classificar, setClassificar] = useState(\"Sem classificação\");\n  const [filtroStatus, setFiltroStatus] = useState(\"Sem filtro\");\n  const [filtroCurso, setFiltroCurso] = useState(\"Sem filtro\");\n\n  //   useEffect(() => {\n  //     classificarPorData(classificar);\n  //     filtrarPor(filtroStatus);\n  //     console.log(classificar);\n  //   }, [classificar, filtroStatus]);\n\n  //   useEffect(() => {\n  //     buscarPor(buscarCurso);\n  //   }, [buscarCurso]);\n\n  useEffect(() => {\n    getCourses();\n    getMessages();\n  }, []);\n\n  useEffect(() => {\n    classificarPorData(classificar);\n    filtrarPorStatus(filtroStatus);\n\n    // handleFiltro();\n  }, [classificar, filtroStatus]);\n\n  useEffect(() => {\n    filtrarPorCurso(filtroCurso);\n\n    // handleFiltro();\n  }, [filtroCurso]);\n\n  //TODO não está funcionando\n  function classificarPorData(classificar) {\n    switch (classificar) {\n      case \"Mais antigas\":\n        setMessagesList(\n          mensagens.sort((a, b) => new Date(a.date) < new Date(b.date))\n        );\n        break;\n      case \"Mais recentes\":\n        setMessagesList(\n          mensagens.sort((a, b) => {\n            return new Date(a.date) > new Date(b.date);\n          })\n        );\n        break;\n      default:\n        setMessagesList(\n          mensagens.sort((a, b) => {\n            return new Date(a.date) > new Date(b.date);\n          })\n        );\n        break;\n    }\n  }\n\n  function filtrarPorStatus(filtroStatus) {\n    if (filtroStatus !== \"Sem filtro\")\n      setMessagesList(mensagens.filter((c) => c.status === filtroStatus));\n    else setMessagesList(mensagens);\n  }\n\n  function filtrarPorCurso(filtroCurso) {\n    if (filtroCurso !== \"Sem filtro\") {\n      setMessagesList(mensagens.filter((c) => c.course === filtroCurso));\n    } else setMessagesList(mensagens);\n  }\n\n  // function handleFiltro() {\n  //   let list = mensagens;\n  //   if (filtroStatus !== \"Sem filtro\") {\n  //     list.filter((c) => c.status === filtroStatus);\n  //   }\n  //   if (filtroCurso !== \"Sem filtro\") {\n  //     setMessagesList(list.filter((c) => c.course === filtroCurso));\n  //   }\n\n  //   console.log(list);\n  //   setMessagesList(list);\n  // }\n\n  function setMessageStatus(id) {\n    const data = {\n      msgId: id,\n      status: \"read\",\n    };\n\n    console.log(data);\n  }\n\n  async function getCourses() {\n    //* req http\n    // setCourseList(courses);\n  }\n\n  async function getMessages() {\n    //* req http\n    setMessagesList(mensagens);\n  }\n\n  return (\n    <>\n      <Container fluid className=\"container-admin\">\n        <div className=\"container-item\">\n          <Row className=\"row-title\">\n            <Col>\n              <h2>Comunicação</h2>\n              <p>Visualize e gerencie as mensagens enviadas pelos alunos</p>\n            </Col>\n          </Row>\n        </div>\n\n        <hr></hr>\n        <div className=\"container-item\" id=\"mensagens-recebidas\">\n          <Row className=\"row-filtro\">\n            <Col>\n              <Row>\n                <h2>Mensagens recebidas</h2>\n                <p>Visualize e edite seus cursos cadastrados</p>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n        <Container className=\"container-filtro\">\n          <div className=\"filtro-item\">\n            <Row>\n              <Form.Label column sm=\"8\">\n                Classificar por\n              </Form.Label>\n              <Dropdown>\n                <Dropdown.Toggle\n                  size=\"sm\"\n                  style={{\n                    backgroundColor: \"#fff\",\n                    border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                    color: \"#000\",\n                    width: \"200px\",\n                  }}\n                >\n                  {classificar}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    onClick={() => setClassificar(\"Mais recentes\")}\n                  >\n                    Mais recentes\n                  </Dropdown.Item>\n                  <Dropdown.Item onClick={() => setClassificar(\"Mais antigas\")}>\n                    Mais antigas\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Row>\n          </div>\n          <div className=\"filtro-item\">\n            <Row>\n              <Form.Label column sm=\"9\">\n                Filtrar por status\n              </Form.Label>\n              <Dropdown>\n                <Dropdown.Toggle\n                  size=\"sm\"\n                  style={{\n                    backgroundColor: \"#fff\",\n                    border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                    color: \"#000\",\n                    width: \"200px\",\n                  }}\n                >\n                  {filtroStatus === \"new\" && \"Novas\"}\n                  {filtroStatus === \"read\" && \"Visualizadas\"}\n                  {filtroStatus === \"answered\" && \"Respondidas\"}\n                  {filtroStatus === \"Sem filtro\" && \"Sem filtro\"}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={() => setFiltroStatus(\"Sem filtro\")}>\n                    Sem filtro\n                  </Dropdown.Item>\n                  <Dropdown.Item onClick={() => setFiltroStatus(\"new\")}>\n                    Novas\n                  </Dropdown.Item>\n                  <Dropdown.Item onClick={() => setFiltroStatus(\"read\")}>\n                    Visualizadas\n                  </Dropdown.Item>\n                  <Dropdown.Item onClick={() => setFiltroStatus(\"answered\")}>\n                    Respondidas\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Row>\n          </div>\n          <div className=\"filtro-item\">\n            {\" \"}\n            <Row>\n              <Form.Label column sm=\"8\">\n                Filtrar por curso\n              </Form.Label>\n              <Dropdown>\n                <Dropdown.Toggle\n                  size=\"sm\"\n                  style={{\n                    backgroundColor: \"#fff\",\n                    border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                    color: \"#000\",\n                    width: \"200px\",\n                  }}\n                >\n                  {filtroCurso}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={() => setFiltroCurso(\"Sem filtro\")}>\n                    Sem filtro\n                  </Dropdown.Item>\n                  {cursos.map((c, id) => {\n                    return (\n                      <Dropdown.Item\n                        key={id}\n                        onClick={() => setFiltroCurso(c.title)}\n                      >\n                        {c.title}\n                      </Dropdown.Item>\n                    );\n                  })}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Row>\n          </div>\n        </Container>\n\n        <br />\n\n        <div className=\"container-item\">\n          <Container className=\"container-table\">\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>CURSO</th>\n                  <th>CLIENTE</th>\n                  <th>DATA</th>\n                  <th>STATUS</th>\n                  <th>AÇÃO</th>\n                </tr>\n              </thead>\n              <tbody>\n                {messagesList?.map((msg, id) => {\n                  return (\n                    <tr key={id}>\n                      <td>{msg.course}</td>\n                      <td>{msg.author}</td>\n                      <td>{msg.date}</td>\n                      <td>\n                        {}\n                        {msg.status === \"new\" && (\n                          <Badge pill bg=\"warning\">\n                            NOVA\n                          </Badge>\n                        )}\n                        {msg.status === \"read\" && (\n                          <Badge pill bg=\"primary\">\n                            VISUALIZADA\n                          </Badge>\n                        )}\n                        {msg.status === \"answered\" && (\n                          <Badge pill bg=\"success\">\n                            RESPONDIDA\n                          </Badge>\n                        )}\n                      </td>\n                      <td>\n                        <BsFillEyeFill\n                          className=\"icon\"\n                          onClick={() => {\n                            setMessage(msg);\n                            setMessageStatus(message.id);\n                            setMessageModalShow(true);\n                          }}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </Container>\n        </div>\n      </Container>\n\n      <MessageModal\n        show={messageModalShow}\n        onHide={() => setMessageModalShow(false)}\n        message={message}\n      />\n    </>\n  );\n}\n\nexport default Comunication;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AdminCourses/AdminCourses.jsx",["459","460","461"],"import { useState, useEffect } from \"react\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  Form,\n  FormControl,\n} from \"react-bootstrap\";\n\nimport { useCourse } from \"../../contexts/CourseContext\";\n\nimport CardComponent from \"../Card/Card\";\nimport EditCourseModal from \"../Modals/EditCourseModal\";\nimport CreateCourseModal from \"../Modals/CreateCourseModal\";\n\n// import cursos from \"../../data/cursos\";\n// import categorias from \"../../data/categorias\";\n\nimport \"./AdminCourses.style.css\";\nimport cursoLoad from \"../../services/curso/cursoLoad\";\nimport loadCategorias from \"../../services/categoria/loadCategorias\";\n\nfunction Courses() {\n  const { allCourses } = useCourse();\n\n  const [classificar, setClassificar] = useState(\"Mais vendidos\");\n  const [filtro, setFiltro] = useState(\"Sem filtro\");\n  const [buscarCurso, setBuscarCurso] = useState(\"\");\n  const [editCourseModal, showEditCourseModal] = useState(false);\n  const [createCourseModal, showCreateCourseModal] = useState(false);\n  const [course, setCourse] = useState({});\n\n  const [categorias, setCategorias] = useState([]);\n\n  const [courseList, setCourseList] = useState([]);\n\n  useEffect(() => {\n    classificarPor(classificar);\n    filtrarPor(filtro);\n  }, [classificar, filtro]);\n\n  useEffect(() => {\n    buscarPor(buscarCurso);\n  }, [buscarCurso]);\n\n  useEffect(() => {\n    getCourses();\n    getCategories()\n  }, []);\n  \n\n  function classificarPor(classificar) {\n    switch (classificar) {\n      case \"Menos vendidos\":\n        setCourseList(\n          courseList.sort((a, b) => {\n            return a.sold - b.sold;\n          })\n        );\n        break;\n      case \"Maior preço\":\n        setCourseList(\n          courseList.sort((a, b) => {\n            return a.price + b.price;\n          })\n        );\n        break;\n      case \"Menor preço\":\n        setCourseList(\n          courseList.sort((a, b) => {\n            return a.price - b.price;\n          })\n        );\n        break;\n      default:\n        setCourseList(\n          courseList.sort((a, b) => {\n            return a.sold + b.sold;\n          })\n        );\n        break;\n    }\n  }\n\n  function filtrarPor(filtro) {\n  // alterar para funções com requisição do backend\n    if (filtro !== \"Sem filtro\")\n      setCourseList(courseList.filter((c) => c.category === filtro));\n    else setCourseList(courseList);\n  }\n\n  function buscarPor(buscarCurso) {\n    setCourseList(\n      // eslint-disable-next-line array-callback-return\n      courseList.filter((val) => {\n        if (!buscarCurso.length) {\n          setFiltro(filtro);\n          return val;\n        } else if (\n          filtro === \"Sem filtro\" &&\n          val.nome.toLowerCase().includes(buscarCurso.toLowerCase())\n        ) {\n          return val;\n        } else if (\n          val.category === filtro &&\n          val.nome.toLowerCase().includes(buscarCurso.toLowerCase())\n        ) {\n          return val;\n        }\n      })\n    );\n  }\n\n  async function getCourses() {\n    try {\n      let courses = await cursoLoad();\n      setCourseList(courses);\n    }\n\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getCategories(){\n    try {\n      let categorias = await loadCategorias(setCategorias);\n      // setCategorias(categorias);\n    }\n    \n    catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  return (\n    <>\n      <Container fluid className=\"container-admin\">\n        <div className=\"container-item\">\n          <Row className=\"row-novo-curso\">\n            <Col>\n              <h2>Cursos</h2>\n              <p>Cadastre um novo curso</p>\n            </Col>\n            <Col>\n              <Button\n                style={{\n                  backgroundColor: \"#14B8A6\",\n                  border: \"none\",\n                  boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n                }}\n                onClick={() => {\n                  showCreateCourseModal(true);\n                }}\n              >\n                NOVO CURSO\n              </Button>\n            </Col>\n          </Row>\n        </div>\n        <hr></hr>\n        <div className=\"container-item\" id=\"cursos-cadastrados\">\n          <Row className=\"row-filtro\">\n            <Col>\n              <Row>\n                <h2>Cursos Cadastrados</h2>\n                <p>Visualize e edite seus cursos cadastrados</p>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n        <br />\n\n        <Container className=\"container-filtro\">\n          <div className=\"filtro-item\">\n            <Form.Label column sm=\"6\">\n              Pesquisar\n            </Form.Label>\n            <Form className=\"search-bar\">\n              <FormControl\n                size=\"sm\"\n                type=\"search\"\n                placeholder=\"Pesquisar cursos\"\n                className=\"me-2\"\n                aria-label=\"Search\"\n                onChange={(e) => {\n                  setBuscarCurso(e.target.value);\n                }}\n                onSubmit={(e) => {\n                  e.preventDefault();\n                }}\n              />\n            </Form>\n          </div>\n          <div className=\"filtro-item\">\n            <Form.Label column sm=\"8\">\n              Classificar por\n            </Form.Label>\n            <Dropdown>\n              <Dropdown.Toggle\n                size=\"sm\"\n                style={{\n                  backgroundColor: \"#fff\",\n                  border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                  color: \"#000\",\n                  width: \"200px\",\n                }}\n              >\n                {classificar}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={() => setClassificar(\"Mais vendidos\")}>\n                  Mais vendidos\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => setClassificar(\"Menos vendidos\")}>\n                  Menos vendidos\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => setClassificar(\"Maior preço\")}>\n                  Maior preço\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => setClassificar(\"Menor preço\")}>\n                  Menor preço\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n          <div className=\"filtro-item\">\n            <Form.Label column sm=\"10\">\n              Filtrar por categoria\n            </Form.Label>\n            <Dropdown>\n              <Dropdown.Toggle\n                size=\"sm\"\n                style={{\n                  backgroundColor: \"#fff\",\n                  border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                  color: \"#000\",\n                  width: \"200px\",\n                }}\n              >\n                {filtro}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={() => setFiltro(\"Sem filtro\")}>\n                  Sem filtro\n                </Dropdown.Item>\n                {categorias?.map((item, id) => {\n                  return (\n                    <Dropdown.Item\n                      onClick={() => setFiltro(item.nome)}\n                      key={id}\n                    >\n                      {item.nome}\n                    </Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        </Container>\n\n        <div className=\"container-item\" id=\"cursos-list\">\n          <div className=\"courses-container\">\n            {/* {courseList?.map((item) => (\n              <CardComponent\n                key={item.id}\n                img={item.img}\n                title={item.title}\n                author={item.author}\n                rating={item.rating}\n                price={item.price}\n                sold={item.sold}\n                onClick={() => {\n                  setCourse(item);\n                  showEditCourseModal(true);\n                }}\n              />\n            ))} */}\n\n            {allCourses?.map((item) => (\n              <CardComponent\n                key={item.id}\n                img={item.imagemUrl}\n                title={item.nome}\n                author={item.autor}\n                rating={item.rating}\n                price={item.preco}\n                sold={item.sold}\n                onClick={() => {\n                  setCourse(item);\n                  console.log(item)\n                  showEditCourseModal(true);\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      </Container>\n\n      <EditCourseModal\n        show={editCourseModal}\n        onHide={() => showEditCourseModal(false)}\n        course={course}\n      />\n\n      <CreateCourseModal\n        show={createCourseModal}\n        onHide={() => showCreateCourseModal(false)}\n      />\n    </>\n  );\n}\n\nexport default Courses;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/MyCoursesCard/MyCoursesCard.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AdminNavbar/AdminNavbarData.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/AddCreditCardModal.jsx",["462","463","464"],"import { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Row, Alert } from \"react-bootstrap\";\nimport ResultCreateCourseModal from \"./ResultCreateCourseModal\";\n\nimport MaskedInput from \"react-maskedinput\";\n\nimport Cards from \"react-credit-cards\";\nimport \"react-credit-cards/es/styles-compiled.css\";\n\nconst axios = require(\"axios\").default;\n\nfunction AddCreditCardModal(props) {\n  // const [resultAddCreditCard, setResultAddCreditCard] = useState(false);\n  // const [submited, isSubmited] = useState(false);\n\n  const [number, setNumber] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [focus, setFocus] = useState(\"\");\n\n  const { result, ...rest } = props;\n\n  async function handleSubmit() {\n    const data = {\n      number: number,\n      name: name,\n      expiry: expiry,\n      cvc: cvc,\n    };\n\n    const url = \"https://fake-api-json-server-presper.herokuapp.com/cartoes\";\n    axios.post(url, data).then((res) => {\n      result(res.status);\n    });\n\n    setNumber(\"\");\n    setName(\"\");\n    setExpiry(\"\");\n    setCvc(\"\");\n    // isSubmited(false);\n    props.onHide();\n  }\n\n  useEffect(() => {\n    setNumber(\"\");\n    setName(\"\");\n    setExpiry(\"\");\n    setCvc(\"\");\n    // isSubmited(false);\n  }, []);\n\n  return (\n    <>\n      <Modal {...rest} centered animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Adicionar cartão</Modal.Title>\n        </Modal.Header>\n        <Form\n          // action=\"submit\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit();\n          }}\n        >\n          <Modal.Body>\n            <div>\n              <Cards\n                className=\"credit-card\"\n                number={number}\n                name={name}\n                expiry={expiry}\n                cvc={cvc}\n                focused={focus}\n              />\n            </div>\n            <div>\n              <Form.Group className=\"mb-3\">\n                <Form.Label column sm=\"2\">\n                  Número\n                </Form.Label>\n                <MaskedInput\n                  className=\"masked-input\"\n                  type=\"tel\"\n                  name=\"cardNumber\"\n                  mask=\"1111111111111111\"\n                  value={number}\n                  onChange={(e) => setNumber(e.target.value)}\n                  onFocus={(_) => setFocus(\"number\")}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Label column sm=\"2\">\n                  Nome\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Nome no cartão\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  onFocus={(_) => setFocus(\"name\")}\n                  required\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label column sm=\"2\">\n                  Validade\n                </Form.Label>\n                <MaskedInput\n                  className=\"masked-input\"\n                  type=\"tel\"\n                  name=\"cardExpiry\"\n                  mask=\"11/11\"\n                  value={expiry}\n                  onChange={(e) => {\n                    setExpiry(e.target.value);\n                  }}\n                  onFocus={(_) => setFocus(\"expiry\")}\n                  required\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label column sm=\"2\">\n                  CVC\n                </Form.Label>\n                <MaskedInput\n                  className=\"masked-input\"\n                  type=\"tel\"\n                  name=\"cardCvc\"\n                  mask=\"111\"\n                  value={cvc}\n                  onChange={(e) => {\n                    setCvc(e.target.value);\n                  }}\n                  onFocus={(_) => setFocus(\"cvc\")}\n                  required\n                />\n              </Form.Group>\n            </div>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button\n              style={{\n                border: \"none\",\n                boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n              }}\n              variant=\"danger\"\n              onClick={() => {\n                props.onHide();\n              }}\n            >\n              Cancelar\n            </Button>\n\n            <Button\n              style={{\n                backgroundColor: \"#14B8A6\",\n                border: \"none\",\n                boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n              }}\n              type=\"submit\"\n            >\n              Adicionar\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddCreditCardModal;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/CertificateCard/CertificateCard.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/DeleteCreditCardModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Navbar/Navbar.jsx",["465","466","467"],"// // import { useEffect, useState, useContext } from \"react\";\n// import { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\n// import { Container } from \"react-bootstrap\";\n// import { Form, FormControl } from \"react-bootstrap\";\n// import { BsFillCartFill } from \"react-icons/bs\";\n\n// import \"../Navbar/Navbar.style.css\";\n\n// import { token } from \"../../services/api\";\n// import loadCategorias from \"../../services/categoria/loadCategorias\";\n// import logo from \"../../assets/project-logo.png\";\n\n// import { useCart } from \"../../contexts/CartContext\";\n// import { CartContext } from \"../../contexts/CartContext\";\n// import { useAuth } from \"../../contexts/AuthContext\";\n\n//   const { cart } = useContext(CartContext);\n//   const [ isLogged, setIsLogged ] = useState(\"\");\n//   const [categorias, setCategorias] = useState([]);\n\n// function NavbarComponent() {\n//   const { cart } = useCart();\n//   const { user, logout, role } = useAuth();\n\n//   async function getCategories(){\n//     try {\n//       await loadCategorias(setCategorias);\n//     }\n    \n//     catch (error) {\n//       console.log(error);\n//     }\n//   }\n\n//   // useEffect(\n//   //   () => {\n//   //     setIsLogged(token)\n\n//   //     getCategories()\n\n//   //   },[]\n//   // )\n\n//   return (\n//     <>\n//       <div>\n//         <Navbar expand=\"lg\" id=\"navbar\">\n//           <Container fluid=\"md\" id=\"container-nav\">\n//             <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n//             <Navbar.Brand href=\"/\" id=\"nav-brand\">\n//               <img src={logo} alt=\"logo\" id=\"navbar-logo\" />\n//             </Navbar.Brand>\n\n//             <Navbar.Collapse id=\"basic-navbar-nav\">\n//               <div className=\"navbar-items \">\n//                 <Nav className=\"me-auto\" id=\"teste\">\n//                   <NavDropdown title=\"Categorias\" id=\"basic-nav-dropdown\">\n//                     {categorias.map((item) => {\n//                       console.log(item)\n//                       return (\n//                         <li key={item.id}>\n//                           <NavDropdown.Item href={`/`} id=\"categories-items\">\n//                             {item.nome}\n//                           </NavDropdown.Item>\n//                         </li>\n//                       );\n//                     })}\n//                   </NavDropdown>\n//                   <Form>\n//                     <FormControl\n//                       type=\"search\"\n//                       placeholder=\"Pesquisar cursos\"\n//                       className=\"me-2\"\n//                       aria-label=\"Search\"\n//                       id=\"search-bar\"\n//                       onKeyPress={() => console.log(\"Searching...\")}\n//                     />\n//                   </Form>\n\n//                   <Nav.Link\n//                     href=\"/shopping-cart\"\n//                     style={{ justifyContent: \"center\" }}\n//                     id=\"cart-link\"\n//                   >\n//                     <BsFillCartFill style={{ fontSize: \"24px\" }} />\n//                     <span id=\"cart-count\">\n//                       {cart.length === null ? 0 : cart.length}\n//                     </span>\n//                   </Nav.Link>\n\n//                   {!isLogged ? (\n//                     <>\n//                       <NavDropdown title=\"Minha Conta\" id=\"basic-nav-dropdown\">\n//                         <NavDropdown.Item\n//                           href={`/perfil`}\n//                           id=\"minhaconta-items\"\n//                         >\n//                           Perfil\n//                         </NavDropdown.Item>\n//                         <NavDropdown.Item\n//                           href={`/my-courses`}\n//                           id=\"minhaconta-items\"\n//                         >\n//                           Meus Cursos\n//                         </NavDropdown.Item>\n//                         <NavDropdown.Item\n//                           href={`/my-certificates`}\n//                           id=\"minhaconta-items\"\n//                         >\n//                           Certificados\n//                         </NavDropdown.Item>\n//                         <NavDropdown.Item\n//                           href={`/my-payment-info`}\n//                           id=\"minhaconta-items\"\n//                         >\n//                           Formas de Pagamento\n//                         </NavDropdown.Item>\n//                         <NavDropdown.Item\n//                           id=\"minhaconta-items\"\n//                           onClick={() => logout()}\n//                         >\n//                           Sair\n//                         </NavDropdown.Item>\n//                       </NavDropdown>\n//                     </>\n//                   ) : (\n//                     <>\n//                       <Nav.Link\n//                         href=\"/signup\"\n//                         className=\"nav-link\"\n//                         id=\"signup-link\"\n//                       >\n//                         Cadastre-se\n//                       </Nav.Link>\n//                       <Nav.Link\n//                         href=\"/login\"\n//                         className=\"nav-link\"\n//                         id=\"login-link\"\n//                       >\n//                         Fazer Login\n//                       </Nav.Link>\n//                     </>\n//                   )}\n\n                  \n//                   {/* {user.role === \"ADMIN\" && (\n//                     <NavDropdown title=\"Admin\" id=\"basic-nav-dropdown\">\n//                       <NavDropdown.Item href={`/admin`} id=\"minhaconta-items\">\n//                         Certificados\n//                       </NavDropdown.Item>\n\n//                       <NavDropdown.Item\n//                         id=\"minhaconta-items\"\n//                         onClick={() => logout()}\n//                       >\n//                         Sair\n//                       </NavDropdown.Item>\n//                     </NavDropdown>\n//                   )} */}\n//                 </Nav>\n//               </div>\n//             </Navbar.Collapse>\n//           </Container>\n//         </Navbar>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default NavbarComponent;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport { Form, FormControl } from \"react-bootstrap\";\nimport { BsFillCartFill } from \"react-icons/bs\";\nimport { useCart } from \"../../contexts/CartContext\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\n\n// useEffect(\n  //   () => {\n    //     setIsLogged(token)\n    \n  //     getCategories()\n\n  //   },[]\n  // )\nimport \"../Navbar/Navbar.style.css\";\n\nimport logo from \"../../assets/project-logo.png\";\nimport loadCategorias from \"../../services/categoria/loadCategorias\";\nimport { token } from \"../../services/api\";\n\n\n\nfunction NavbarComponent() {\n  const { cart } = useCart();\n  const { user, logout, role } = useAuth();\n  \n  const [ isLogged, setIsLogged ] = useState(\"\");\n  const [categorias, setCategorias] = useState([]);\n  \n  \n  async function getCategories(){\n    try {\n      await loadCategorias(setCategorias);\n    }\n    \n    catch (error) {\n      console.log(error);\n    }\n  }\n\n\n\n  // useEffect(() => {\n  //   console.log(role);\n  // }, [user, logout, role]);\n    useEffect(\n    () => {\n      setIsLogged(token)\n\n      getCategories()\n\n    },[]\n  )\n\n\n  return (\n    <>\n      <div>\n        <Navbar expand=\"lg\" id=\"navbar\">\n          <Container fluid=\"md\" id=\"container-nav\">\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n            <Navbar.Brand href=\"/\" id=\"nav-brand\">\n              <img src={logo} alt=\"logo\" id=\"navbar-logo\" />\n            </Navbar.Brand>\n\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <div className=\"navbar-items \">\n                <Nav className=\"me-auto\" id=\"teste\">\n                  <NavDropdown title=\"Categorias\" id=\"basic-nav-dropdown\">\n                    {categorias.map((item) => {\n                      return (\n                        <li key={item.id}>\n                          <NavDropdown.Item href={`/`} id=\"categories-items\">\n                            {item.nome}\n                          </NavDropdown.Item>\n                        </li>\n                      );\n                    })}\n                  </NavDropdown>\n                  <Form>\n                    <FormControl\n                      type=\"search\"\n                      placeholder=\"Pesquisar cursos\"\n                      className=\"me-2\"\n                      aria-label=\"Search\"\n                      id=\"search-bar\"\n                      onKeyPress={() => console.log(\"Searching...\")}\n                    />\n                  </Form>\n\n                  <Nav.Link\n                    href=\"/shopping-cart\"\n                    style={{ justifyContent: \"center\" }}\n                    id=\"cart-link\"\n                  >\n                    <BsFillCartFill style={{ fontSize: \"24px\" }} />\n                    <span id=\"cart-count\">\n                      {cart.length === null ? 0 : cart.length}\n                    </span>\n                  </Nav.Link>\n\n                  {user ? (\n                    <>\n                      <NavDropdown title=\"Minha Conta\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item\n                          href={`/perfil`}\n                          id=\"minhaconta-items\"\n                        >\n                          Perfil\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                          href={`/my-courses`}\n                          id=\"minhaconta-items\"\n                        >\n                          Meus Cursos\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                          href={`/my-certificates`}\n                          id=\"minhaconta-items\"\n                        >\n                          Certificados\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                          href={`/my-payment-info`}\n                          id=\"minhaconta-items\"\n                        >\n                          Formas de Pagamento\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                          id=\"minhaconta-items\"\n                          onClick={() => logout()}\n                        >\n                          Sair\n                        </NavDropdown.Item>\n                      </NavDropdown>\n                    </>\n                  ) : (\n                    <>\n                      <Nav.Link\n                        href=\"/signup\"\n                        className=\"nav-link\"\n                        id=\"signup-link\"\n                      >\n                        Cadastre-se\n                      </Nav.Link>\n                      <Nav.Link\n                        href=\"/login\"\n                        className=\"nav-link\"\n                        id=\"login-link\"\n                      >\n                        Fazer Login\n                      </Nav.Link>\n                    </>\n                  )}\n\n                  \n                  {/* {user.role === \"ADMIN\" && (\n                    <NavDropdown title=\"Admin\" id=\"basic-nav-dropdown\">\n                      <NavDropdown.Item href={`/admin`} id=\"minhaconta-items\">\n                        Certificados\n                      </NavDropdown.Item>\n                      <NavDropdown.Item\n                        id=\"minhaconta-items\"\n                        onClick={() => logout()}\n                      >\n                        Sair\n                      </NavDropdown.Item>\n                    </NavDropdown>\n                  )} */}\n                </Nav>\n              </div>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    </>\n  );\n}\n\nexport default NavbarComponent;","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Card/Card.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/ProductCard/ProductCard.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/CommentsCard/CommentsCard.jsx",["468"],"import React from \"react\";\nimport { Col, Card } from \"react-bootstrap\";\n\nimport \"./CommentsCard.styles.css\";\n\nexport default class CommentsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.id,\n      img: props.img,\n      author: props.author,\n      text: props.text,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <Card id=\"card\">\n          <div id=\"img\">\n            {\" \"}\n            <Card.Img id=\"card-img\" variant=\"top\" src={this.state.img} />\n          </div>\n          <div>\n            <Card.Body>\n              <Card.Title>{this.state.author}</Card.Title>\n              <Card.Text>{this.state.text}</Card.Text>\n            </Card.Body>\n          </div>\n        </Card>\n        <hr />\n      </>\n    );\n  }\n}\n","/home/ryan/Desktop/Trabalho/presper-daher/src/data/mensagens.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/MessageModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/EditCourseModal.jsx",["469","470","471"],"import { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, ListGroup, Alert } from \"react-bootstrap\";\nimport { useCoursePage } from \"../../services/Hooks/CoursePageHook\";\nimport { BsFillTrashFill } from \"react-icons/bs\";\n\nimport ResultEditCourseModal from \"./ResultEditCourseModal\";\nimport DeleteVideoModal from \"./DeleteVideoModal\";\n\nimport { formatPrice } from \"../../utils/format\";\nimport IntlCurrencyInput from \"react-intl-currency-input\"\n\nimport currencyConfig from \"../../utils/currenryConfig\";\nimport cursoUpdate from \"../../services/curso/cursoUpdate\";\nimport loadCategorias from \"../../services/categoria/loadCategorias\";\nimport uploadImage from \"../../services/imagem/upload\";\nimport DeleteCourseModal from \"./DeleteCourseModal\";\n\n// TODO - formatar data.videos antes de submeter\n\nfunction EditCourseModal(props) {\n  \n  const oldVideos = props.course.videos;\n  \n  // const [image, setImage] = useState(props.course.imagemUrl);\n  // const [title, setTitle] = useState(props.course.nome);\n  // const [author, setAuthor] = useState(props.course.autor);\n  // const [price, setPrice] = useState(props.course.preco);\n  // const [category, setCategory] = useState(props.course.categoria);\n  // const [description, setDescription] = useState(props.course.descricao);\n  const [deleteVideoModalShow, setDeleteVideoModalShow] = useState(false);\n  const [handleChangePrice,           setHandleChangePrice        ] = useState(formatPrice(props.course.preco));\n  const [resultDeleteCourseModalShow, setResultDeleteCourseModalShow] = useState(false)\n\n  const {\n    image,\n    setImage,\n    title,\n    setTitle,\n    author,\n    setAuthor,\n    price,\n    setPrice,\n    category,\n    setCategory,\n    description,\n    setDescription,\n    videos,\n    setVideos,\n    videosErrors,\n    setVideosErrors,\n    updateCourse,\n    resultEditCourseModalShow,\n    setResultEditCourseModalShow,\n    // resultDeleteCourseModalShow,\n    // setResultDeleteCourseModalShow,\n    result,\n  } = useCoursePage();\n\n  const [videosList, setVideosList] = useState(props.course.videos);\n  const [newVideos, setNewVideos] = useState([]);\n  const [newVideo,  setNewVideo] = useState();\n  const [videoToDelete, setVideoToDelete] = useState(\"\");\n  // const [videosErrors, setVideosErrors] = useState([]);\n  const [categorias,              setCategorias  ]      = useState([]);\n\n  // const [videosErrors, setVideosErrors] = useState([]);\n\n  useEffect(() => {\n    setVideosList(oldVideos);\n  }, [oldVideos]);\n\n  function handleSubmit() {\n\n    const data = {\n      id: props.course.id,\n      imagemUrl: image || props.course.imagemUrl,\n      nome: title || props.course.nome,\n      autor: author || props.course.autor,\n      preco: price || props.course.preco,\n      categoriaId: category || props.course.categoriaId,\n      descricao: description || props.course.descricao,\n      videos: newVideos,\n    };\n    console.log(data)\n\n    cursoUpdate(data, props.course.id)\n\n    setResultEditCourseModalShow(true);\n  }\n\n  function handleAddNewVideos(data) {\n\n    let errors = [];\n    let files = [];\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].type === \"video/mp4\") files.push(data[i]);\n      else errors.push(data[i]);\n    }\n    setNewVideos(files);\n    setVideosErrors(errors);\n  }\n\n  const handleChangePriceOfProduct = (event, value, maskedValue) => {\n    event.preventDefault();\n\n    setPrice(value);                   // value without mask (ex: 1234.56)\n    setHandleChangePrice(maskedValue); // masked value (ex: R$1234,56)\n  };\n\n  async function getCategories(){\n    try {\n      await loadCategorias(setCategorias);\n    }\n    \n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(\n    () => {\n\n      getCategories()\n    },[]\n  )\n\n  console.log(formatPrice(props.course.preco))\n  /*\n  \n  Line 272:29:  'setDeleteVideoModalShow' is not defined  no-undef\n  Line 392:15:  'deleteVideoModalShow' is not defined     no-undef\n  Line 393:23:  'setDeleteVideoModalShow' is not defined  no-undef\n\n  */\n  return (\n    <>\n      <Modal {...props} centered animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Editar curso</Modal.Title>\n        </Modal.Header>\n        <Form\n          action=\"submit\"\n          onSubmit={() => {\n            handleSubmit();\n            props.onHide();\n          }}\n        >\n          <Modal.Body>\n            <Form.Group className=\"mb-3\">\n              <Form.Label column sm=\"2\">\n                Título\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                defaultValue={props.course.nome}\n                onChange={(e) => setTitle(e.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label column sm=\"2\">\n                Categoria\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue={props.course.categoriaId}\n                onChange={(e) => setCategory(e.target.value)}\n                required\n              >\n                {\n                  categorias.map(\n                    (category) => (\n                      <option key={category.id} value={category.id}>\n                        {category.nome}\n                      </option>\n                    )\n                  )\n                }\n\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label column sm=\"2\">\n                Autor\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                defaultValue={props.course.autor}\n                onChange={(e) => setAuthor(e.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label column sm=\"2\">\n                Preço\n              </Form.Label>\n              {/* <Form.Control\n                type=\"float\"\n                min={0.0}\n                defaultValue={props.course.preco}\n                onChange={(e) => setPrice(e.target.value)}\n                required\n              /> */}\n               <IntlCurrencyInput \n                  className=\"currencyInput\"\n                  currency=\"BRL\" \n                  config={currencyConfig}\n                  value={handleChangePrice}\n                  onChange={handleChangePriceOfProduct} \n              />\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label column sm=\"2\">\n                Descrição\n              </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                defaultValue={props.course.descricao}\n                onChange={(e) => setDescription(e.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formPlaintextEmail\">\n              <Form.Label column sm=\"2\">\n                Imagem\n              </Form.Label>\n              <Form.Control readOnly defaultValue={props.course.imagemUrl} required />\n            </Form.Group>\n\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <Form.Label column>Selecionar nova imagem</Form.Label>\n              <Form.Control\n                type=\"file\"\n                onChange={(e) => setImage(e.target.file)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicCheckbox\" className=\"mb-3\">\n              <Form.Label column sm=\"2\">\n                Videos\n              </Form.Label>\n              <Form.Label>Selecionar vídeos a serem removidos</Form.Label>\n\n              <ListGroup as=\"ol\" variant=\"flush\">\n                {videosList?.map((video, id) => {\n                  return (\n                    <ListGroup.Item\n                      key={id}\n                      as=\"li\"\n                      style={{\n                        justifyContent: \"space-between\",\n                        display: \"flex\",\n                        fontSize: \"14px\",\n                        // alignItems: \"center\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <span>\n                        {\" \"}\n                        {\"  \"}\n                        {video}\n                      </span>\n                      <span>\n                        <BsFillTrashFill\n                          color=\"rgb(220, 53, 69)\"\n                          style={{ cursor: \"pointer\" }}\n                          onClick={() => {\n                            props.onHide();\n                            setVideoToDelete(video);\n                            setDeleteVideoModalShow(true);\n                          }}\n                        />\n                      </span>\n                    </ListGroup.Item>\n                  );\n                })}\n              </ListGroup>\n            </Form.Group>\n\n            <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\n              <Form.Label column sm=\"4\">\n                Adicionar vídeo\n              </Form.Label>\n              <Form.Control\n                type=\"file\"\n                multiple\n                onChange={async (e) => {\n                  let video = e.target.file\n                  console.log(video)\n                  console.log(e.target.files);\n                  await uploadImage(e.target.files, setNewVideo)\n                  handleAddNewVideos(newVideo);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n              <Form.Label>Vídeos selecionados:</Form.Label>\n\n              {newVideos?.length > 0\n                ? newVideos.map((video, id) => {\n                    return (\n                      <Form.Check\n                        type=\"checkbox\"\n                        label={video.name}\n                        key={id}\n                        checked\n                        onChange={() => console.log(video.name)}\n                      />\n                    );\n                  })\n                : \"\"}\n            </Form.Group>\n            {videosErrors?.length ? (\n              <Alert variant=\"danger\">\n                Os seguintes arquivos não puderam ser carregados pois não\n                possuem a extensão <strong>mp4</strong>\n                <br />\n                <br />\n                <ul>\n                  {videosErrors.map((val, id) => {\n                    return <li key={id}>{val.name}</li>;\n                  })}\n                </ul>\n              </Alert>\n            ) : (\n              \"\"\n            )}\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#fff\",\n                border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                color: \"#000\",\n              }}\n              onClick={() => {\n                setResultDeleteCourseModalShow(true);\n                props.onHide();\n              }}\n            >\n              Remover curso\n            </Button>\n\n            <Button\n              style={{\n                border: \"none\",\n                boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n              }}\n              variant=\"danger\"\n              onClick={() => {\n                props.onHide();\n                setVideosErrors([]);\n                setNewVideos();\n              }}\n            >\n              Cancelar\n            </Button>\n\n            <Button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#14B8A6\",\n                border: \"none\",\n                boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n              }}\n            >\n              Editar\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <ResultEditCourseModal\n        show={resultEditCourseModalShow}\n        onHide={() => setResultEditCourseModalShow(false)}\n        course={props.course}\n        result={result}\n      />\n\n      <DeleteCourseModal\n        show={resultDeleteCourseModalShow}\n        onHide={() => setResultDeleteCourseModalShow(false)}\n        course={props.course}\n      />\n\n      <DeleteVideoModal\n        show={deleteVideoModalShow}\n        onHide={() => setDeleteVideoModalShow(false)}\n        video={videoToDelete}\n        // course={props.course}\n        // result={\"not-okay\"}\n      />\n    </>\n  );\n}\n\nexport default EditCourseModal;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/CreateCourseModal.jsx",["472","473","474","475"],"import { createContext, useState, useEffect, useContext } from \"react\";\nimport { Modal, Button, Form, Row } from \"react-bootstrap\";\nimport { useCoursePage } from \"../../services/Hooks/CoursePageHook\";\nimport ResultCreateCourseModal from \"./ResultCreateCourseModal\";\nimport { toast } from \"react-toastify\"\nimport uploadImage from \"../../services/imagem/upload\";\n\nimport IntlCurrencyInput from \"react-intl-currency-input\"\n\nimport '../../index.css'\n\nimport currencyConfig from \"../../utils/currenryConfig\";\n\nimport cursoCreate from \"../../services/curso/cursoCreate\";\nimport loadCategorias from \"../../services/categoria/loadCategorias\";\n\nfunction CreateCourseModal(props) {\n  // const [resultCreateCourseModalShow, setResultCreateCourseModalShow] =\n  //   useState(false);\n\n  // const [image,                   setImage       ]      = useState(\"\");\n  // const [title,                   setTitle       ]      = useState(\"\");\n  // const [author,                  setAuthor      ]      = useState(\"\");\n  // const [price,                   setPrice       ]      = useState(\"\");\n  // const [category,                setCategory    ]      = useState(\"\");\n  // const [description,             setDescription ]      = useState(\"\");\n  // const [videosErrors,            setVideosErrors]      = useState([]);\n  // const [videos,                  setVideos      ]      = useState([]);\n  const [handleChangePrice,       setHandleChangePrice] = useState();\n  const [categorias,              setCategorias  ]      = useState([]);\n  const [newVideo,                setNewVideo    ] = useState();\n\n\n\n  // const [videosList, setVideosList] = useState([]);\n\n  // const [course, setCourse] = useState({});\n\n  useEffect(() => { }, []);\n\n  async function handleSubmit() {\n    const data = {\n      imagemUrl:   image,\n      nome:        title,\n      autor:       author,\n      preco:       price,\n      categoriaId: category,\n      descricao:   description,\n      videos:      videosList,\n      // videos: videos,\n    };\n\n    try {\n      cursoCreate(data)\n    }\n    catch (error) {\n      console.error(error);\n    }\n    setCourse(data);\n    setResultCreateCourseModalShow(true);\n    setVideosErrors([]);\n  }\n  \n  const {\n    createCourse,\n    result,\n    setResult,\n    setImage,\n    image,\n    setTitle,\n    title,\n    setAuthor,\n    author,\n    setPrice,\n    price,\n    setCategory,\n    category,\n    setDescription,\n    description,\n    setVideos,\n    setVideosErrors,\n    videosList,\n    setVideosList,\n    course,\n    setCourse,\n    resultCreateCourseModalShow,\n    setResultCreateCourseModalShow,\n  } = useCoursePage();\n\n  // useEffect(() => {\n  //   console.log(image);\n  // }, [setImage]);\n\n  function handleAddVideos(data) {\n    console.log(data)\n\n    let errors = [];\n    let files = [];\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].type === \"video/mp4\") files.push(data[i]);\n      else errors.push(data[i]);\n    }\n\n    setVideosList(files);\n    setVideosErrors(errors);\n  }\n\n  async function handleUploadImage(image){\n    if (image.type.includes('image')) {\n      \n      uploadImage(image, setImage)\n\n    }\n    else {\n      toast.error('Arquivo inválido!')\n    }\n  }\n\n  const handleChangePriceOfProduct = (event, value, maskedValue) => {\n    event.preventDefault();\n\n    setPrice(value);                   // value without mask (ex: 1234.56)\n    setHandleChangePrice(maskedValue); // masked value (ex: R$1234,56)\n  };\n\n  async function getCategories(){\n    try {\n      await loadCategorias(setCategorias);\n    }\n    \n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(\n    () => {\n\n      getCategories()\n    },[]\n  )\n\n  return (\n    <>\n      <Modal {...props} centered animation={false}>\n        <Modal.Header\n          closeButton\n          onClick={() => {\n            setVideosErrors();\n            setVideosList();\n          }}\n        >\n          <Modal.Title>Adicionar curso</Modal.Title>\n        </Modal.Header>\n        <Form\n          encType=\"nultipart/form-data\"\n          action=\"submit\"\n          onSubmit={() => {\n            props.onHide();\n            setResult(null);\n            setVideosList();\n            createCourse();\n          }}\n        >\n          <Modal.Body>\n            <Form.Group className=\"mb-3\">\n              <Form.Label column sm=\"2\">\n                Título\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Título\"\n                onChange={(e) => setTitle(e.target.value)}\n                required\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label column sm=\"2\">\n                Categoria\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={(e) => setCategory(e.target.value)}\n                required\n              >\n                {\n                  categorias.map(\n                    (category) => (\n                      <option key={category.id} value={category.id}>\n                        {category.nome}\n                      </option>\n                    )\n                  )\n                }\n\n              </Form.Control>\n              \n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label column sm=\"2\">\n                Autor\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Autor\"\n                onChange={(e) => setAuthor(e.target.value)}\n                required\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label column sm=\"2\">\n                Preço\n              </Form.Label>\n              \n              <IntlCurrencyInput \n                  className=\"currencyInput\"\n                  currency=\"BRL\" \n                  config={currencyConfig}\n                  onChange={handleChangePriceOfProduct} \n                  value={handleChangePrice}\n              />\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label column sm=\"2\">\n                Descrição\n              </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                placeholder=\"Descrição\"\n                onChange={(e) => setDescription(e.target.value)}\n                required\n              />\n            </Form.Group>\n            <Form.Group\n              as={Row}\n              className=\"mb-3\"\n              controlId=\"formPlaintextEmail\"\n            >\n              <Form.Label column sm=\"2\">\n                Imagem\n              </Form.Label>\n              <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                <Form.Control\n                  name=\"courseImage\"\n                  type=\"file\"\n                  required\n                  onChange={(e) => {\n                    handleUploadImage(e.target.files[0])\n                  }}\n                />\n              </Form.Group>\n            </Form.Group>\n            <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\n              <Form.Label column sm=\"4\">\n                Adicionar vídeo\n              </Form.Label>\n              <Form.Control\n                type=\"file\"\n                multiple\n                required\n                onChange={async (e) => {\n                  let video = e.target.files[0]\n                  console.log(video)\n                  console.log(video);\n                  await uploadImage(video, setNewVideo)\n                  handleAddVideos(newVideo);\n                }}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n              <Form.Label>Vídeos selecionados:</Form.Label>\n\n              {/* {videosList?.length > 0\n                ? videosList.map((video, id) => {\n                  return (\n                    <Form.Check\n                      type=\"checkbox\"\n                      label={video.name}\n                      key={id}\n                      checked\n                      onChange={() => console.log(video.name)}\n                    />\n                  );\n                })\n                : \"\"}\n                    return (\n                      <Form.Check\n                        type=\"checkbox\"\n                        label={video.name}\n                        key={id}\n                        checked\n                        onChange={() => console.log(video.name)}\n                      />\n                    );\n                  })\n                : \"\"} */}\n            </Form.Group>\n\n            {/* {videosErrors?.length ? (\n              <Alert variant=\"danger\">\n                Os seguintes arquivos não puderam ser carregados pois não\n                possuem a extensão <strong>mp4</strong>\n                <br />\n                <br />\n                <ul>\n                  {videosErrors.map((val, id) => {\n                    return <li key={id}>{val.name}</li>;\n                  })}\n                </ul>\n              </Alert>\n            ) : (\n              \"\"\n            )} */}\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button\n              style={{\n                border: \"none\",\n                boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n              }}\n              variant=\"danger\"\n              onClick={() => {\n                props.onHide();\n                setVideosErrors([]);\n                setVideosList();\n              }}\n            >\n              Cancelar\n            </Button>\n\n            <Button\n              style={{\n                backgroundColor: \"#14B8A6\",\n                border: \"none\",\n                boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n              }}\n              type=\"submit\"\n            >\n              Adicionar\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n      <ResultCreateCourseModal\n        show={resultCreateCourseModalShow}\n        onHide={() => setResultCreateCourseModalShow(false)}\n        course={course}\n        result={result}\n      />\n    </>\n  );\n}\n\nexport default CreateCourseModal;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultCreateCourseModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultMessageModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/DeleteVideoModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultEditCourseModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultDeleteVideoModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/imagem/upload.js",["476","477"],"import axios from \"axios\"\nimport { toast } from \"react-toastify\"\nimport { api, ip, porta } from \"../api\"\n\n\nexport default async function uploadImage(newImage, setImage) {\n    const formData = new FormData()\n\n    console.log(newImage)\n\n    formData.append('file', newImage)\n\n    let imageName = newImage.name\n    console.log(imageName)\n\n    let credentials = await api.get(`file/credentials`, {\n        params: {\n            filename: imageName,\n            storageId: 'banner',\n        },\n    })\n    if (credentials.status != 200) {\n        toast.info('Imagem inválida, ou problemas com o servidor :(')\n        return\n    }\n\n    let credentialsData = credentials.data\n\n    let credencial = credentialsData.uploadCredentials.url\n\n    console.log(credentialsData)\n\n    let credentialCleaned = credencial.replace('\"http://localhost:8157/api\" ;localhost', '')\n    let downloadExtension = credentialsData.downloadUrl.replace('\"http://localhost:8157/api\" ;localhost', '')\n\n    let ipLoad = `${ip}:${porta}/api${credentialCleaned}`\n\n    let upload = await axios.post(ipLoad, formData, {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n    })\n    if (upload.status != 200) {\n        console.log(upload)\n        toast.info('Imagem inválida')\n        return\n    }\n    toast.success('Imagem Válida!')\n\n    let pathToImage = `${ip}:${porta}/api${downloadExtension}`\n\n    setImage(pathToImage)\n}","/home/ryan/Desktop/Trabalho/presper-daher/src/services/api.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/user/cadastro.js",["478"],"\n/*\nFunção usada no cadastro\n*/\n\nimport {apiWithoutTenant} from '../api'\nimport handleLocalStorageEmailAndPassword from '../../utils/handleLocalStorageEmailAndPassword'\nimport responseHandler from '../../utils/responseHandler'\nimport loadUser from './loadUser'\nimport servidorErrorMessage from '../../utils/servidorErrorMessage'\n\n// NÃO POSSUI NOME\n\nexport default async function cadastro(name, email, password, role, invitationToken,  tenantId) {\n\n    return apiWithoutTenant.post('auth/sign-up', {\n      fullName:        name,\n      email:           email, \n      password:        password, \n      role:            role, \n      invitationToken: invitationToken,\n      tenantId:        tenantId\n      })\n      .then((response) => {\n        console.log(response)\n\n        let mensagemOk = 'Opa, recebemos o seu registro :)'\n\n        responseHandler(response.status, mensagemOk)\n\n        if (response.status == 200) {\n          //first check the http response, returning the result to user\n          handleLocalStorageEmailAndPassword(email, password)\n          loadUser(response.data)\n          return 'ok'\n        }\n\n      })\n      .catch(() => {\n        servidorErrorMessage()\n      })\n  }","/home/ryan/Desktop/Trabalho/presper-daher/src/services/user/loadUser.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/utils/handleLocalStorage.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/utils/handleLocalStorageEmailAndPassword.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/utils/responseHandler.js",["479"],"/*\nAqui ficará o tratamento da resposta usando toast\n*/\nimport { toast } from 'react-toastify';\n\n\n\nexport default async function responseHandler(\n    responseStatus, mensagemSeOk, mensagemSeNaoOk\n    ) {\n    if(responseStatus == 200 ){\n        mensagemSeOk ? toast.success(mensagemSeOk) : toast.success(\"Ação feita com sucesso!\") \n    }\n    else {\n    //else if (responseStatus != 200 ){\n        mensagemSeNaoOk ? toast.error(mensagemSeNaoOk) : toast.error(\"Algo deu errado :(\") \n    }\n\n}","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/servidorErrorMessage.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/user/login.js",["480"],"import{ apiWithoutTenant }from '../api'\nimport { toast } from \"react-toastify\";\n\nimport handleLocalStorageEmailAndPassword from '../../utils/handleLocalStorageEmailAndPassword'\nimport responseHandler from '../../utils/responseHandler'\nimport loadUser from './loadUser'\nimport servidorErrorMessage from '../../utils/servidorErrorMessage'\n\nexport default async function login(email, password) {\n    return apiWithoutTenant.post(`auth/sign-in`, {\n      email: email,\n      password: password,\n    })  \n    .then(\n      async (response) => {\n\n     let messageOk = `Login efetuado com sucesso! :)`\n     let messageNotOk = `Ops, Dados Incorretos!`\n     \n     responseHandler(response.status, messageOk, messageNotOk )\n      if (response.status == 200) {\n\n        await loadUser(response.data)\n        handleLocalStorageEmailAndPassword(email, password)\n        return 'ok'\n      }\n    })\n     .catch((error) => {\n    console.log(error)\n      if (error.response) {\n        toast.error(error.response.data);\n      }\n      else {\n        servidorErrorMessage()\n      }\n    })\n} ","/home/ryan/Desktop/Trabalho/presper-daher/src/services/user/updateUser.js",["481"],"\n/*\nFunção usada no cadastro\n*/\n\nimport { api } from '../api'\nimport handleLocalStorageEmailAndPassword from '../../utils/handleLocalStorageEmailAndPassword'\nimport responseHandler from '../../utils/responseHandler'\nimport loadUser from './loadUser'\nimport servidorErrorMessage from '../../utils/servidorErrorMessage'\n\nexport default async function updateUser(id, data) {\n\n    return api.put(`user/${id}`, data)\n      .then((response) => {\n        console.log(response)\n\n        let mensagemOk = 'Opa, recebemos sua alteração! :)'\n\n        responseHandler(response.status, mensagemOk)\n\n        if (response.status == 200) {\n          //first check the http response, returning the result to user\n          handleLocalStorageEmailAndPassword(data.email, data.password)\n          loadUser(response.data)\n          return 'ok'\n        }\n\n      })\n      .catch(() => {\n        servidorErrorMessage()\n      })\n  }","/home/ryan/Desktop/Trabalho/presper-daher/src/services/carrinho/deleteProductOfCart.js",["482","483"],"import { toast } from 'react-toastify';\nimport { api } from '../api'\nimport responseHandler from '../../utils/responseHandler';\n\nexport default async function deleteProductOfCart(productAlreadyInCart){\n  const response = api.delete(`carrinhoProdutoOne/${productAlreadyInCart.id}`, { productAlreadyInCart })\n  .then(\n    (response) => {\n      let status = response.status\n      responseHandler(status, \"Produto removido com sucesso!\", \"Erro :(\")\n      if(response.status == 200){\n\n        // setUpdate(prevValue => {\n        //   return prevValue-1\t\n        //    })\n      }\n      return response.data\n\n    }\n  )\n\n  return response \n}","/home/ryan/Desktop/Trabalho/presper-daher/src/services/carrinho/loadCart.js",["484"],"import { toast } from 'react-toastify';\nimport { api } from '../api'\n\n\nexport default  async function loadCart(){\n  const cartResponse = await api.get(`carrinho`)\n  return cartResponse.data.rows;\n}","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/makeSumToCarrinho.js",["485","486"],"import { formatPrice } from \"./format\";\n\nexport default function makeSumToCarrinho(carrinhos){\n    const total = carrinhos.reduce((sumTotal, carrinho) => {\n            carrinho.produtos.filter(\n                ({produto, quantidade}) => {\n                    let precoFormatado =  parseFloat(produto.preco) \n                    sumTotal += precoFormatado * quantidade\n                }\n            )\n        return sumTotal;\n        }, 0)\n    \n    return total\n}\n","/home/ryan/Desktop/Trabalho/presper-daher/src/services/carrinho/addInCart.js",["487","488"],"import { toast } from 'react-toastify';\nimport responseHandler from '../../utils/responseHandler';\nimport { api } from '../api'\n\n\nexport default async function addInCart(product, quantidade){\n  const response = await api.post(`carrinhoProduto/`, { data:{ product, 'quantidade': quantidade} })\n  .then(\n    (response) => {\n      let status = response.status\n      responseHandler(status,\"Produto adicionado ao carrinho com sucesso!\",  \"Erro na adição do produto\")\n      if(response.status == 200){\n        // setUpdate(prevValue => {\n        //   return prevValue+1\t\n        //    })\n\n        // console.log(\"update 1\")\n        // console.log(update)\n\n        return response.data\n      }\n      else if(response.status == 500){\n        toast.error(\"Problemas com o servidor :(\")\n      }\n    }\n  )\n  return response\n}","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/format.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/curso/cursoLoad.js",["489"],"import { api, apiWithTenantAndWithToken } from \"../api\";\n\n\n\nexport default async function cursoLoad(){\n    return await api.get(`produto`)\n          .then((response) => {\n            let produtoData = response.data.rows\n            return produtoData\n          });\n}\n","/home/ryan/Desktop/Trabalho/presper-daher/src/services/pergunta/perguntaLoad.js",["490"],"import { api, apiWithTenantAndWithToken } from \"../api\";\n\n\n\nexport default async function loadPergunta(){\n    return await api.get(`pergunta`)\n          .then((response) => {\n            console.log(response)\n            let perguntaData = response.data.rows\n            return perguntaData\n          });\n}\n","/home/ryan/Desktop/Trabalho/presper-daher/src/services/produto/productFind.js",["491"],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/produto/loadProduct.js",["492"],"import { api, apiWithTenantAndWithToken } from \"../api\";\n\n\n\nexport default async function loadProduct(){\n    return await api.get(`produto`)\n          .then((response) => {\n            console.log(response.data.rows)\n            let productData = response.data.rows\n            return productData\n          });\n}\n",["493","494"],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AdminBanners/AdminBanners.jsx",["495"],"import React, { useState, useEffect } from \"react\";\n\nimport AddBannerModal from \"../Modals/AddBannerModal\";\nimport BannerCard from \"../BannerCard/BannerCard\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  Form,\n  FormControl,\n} from \"react-bootstrap\";\nimport bannerLoad from \"../../services/banner/bannerLoad\";\n\nconst axios = require(\"axios\").default;\n\nfunction Banners(props) {\n  const [showAddBannerModal, isShowAddBannerModal] = useState(false);\n\n  const [bannersList, setBannersList] = useState([]);\n\n  async function getBanners() {\n    try {\n      \n      let bannerData = await bannerLoad()\n\n      setBannersList(bannerData);\n      \n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  useEffect(() => {\n    getBanners();\n  }, []);\n\n  return (\n    <>\n      <Container fluid className=\"container-admin\">\n        <div className=\"container-item\">\n          <Row className=\"row-novo-curso\">\n            <Col>\n              <h2>Banners</h2>\n              <p>Cadastre um novo banner</p>\n            </Col>\n            <Col>\n              <Button\n                style={{\n                  backgroundColor: \"#14B8A6\",\n                  border: \"none\",\n                  boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n                }}\n                onClick={() => {\n                  isShowAddBannerModal(true);\n                }}\n              >\n                NOVO BANNER\n              </Button>\n            </Col>\n          </Row>\n        </div>\n        <hr></hr>\n        <div className=\"container-item\" id=\"cursos-cadastrados\">\n          <Row className=\"row-filtro\">\n            <Col>\n              <Row>\n                <h2>Banners Cadastrados</h2>\n                <p>Visualize e edite seus banners cadastrados</p>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n        <br />\n\n        <Container className=\"container-filtro\">\n          <div className=\"filtro-item\">\n            <Form.Label column sm=\"6\">\n              Pesquisar\n            </Form.Label>\n            <Form className=\"search-bar\">\n              <FormControl\n                size=\"sm\"\n                type=\"search\"\n                placeholder=\"Pesquisar cursos\"\n                className=\"me-2\"\n                aria-label=\"Search\"\n                onChange={(e) => {\n                  //   setBuscarCurso(e.target.value);\n                }}\n                onSubmit={(e) => {\n                  e.preventDefault();\n                }}\n              />\n            </Form>\n          </div>\n          <div className=\"filtro-item\">\n            <Form.Label column sm=\"8\">\n              Classificar por\n            </Form.Label>\n            <Dropdown>\n              <Dropdown.Toggle\n                size=\"sm\"\n                style={{\n                  backgroundColor: \"#fff\",\n                  border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                  color: \"#000\",\n                  width: \"200px\",\n                }}\n              >\n                {/* {classificar} */}\n              </Dropdown.Toggle>\n\n              {/* <Dropdown.Menu>\n                <Dropdown.Item onClick={() => setClassificar(\"Mais vendidos\")}>\n                  Mais vendidos\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => setClassificar(\"Menos vendidos\")}>\n                  Menos vendidos\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => setClassificar(\"Maior preço\")}>\n                  Maior preço\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => setClassificar(\"Menor preço\")}>\n                  Menor preço\n                </Dropdown.Item>\n              </Dropdown.Menu> */}\n            </Dropdown>\n          </div>\n          <div className=\"filtro-item\">\n            {/* <Form.Label column sm=\"10\">\n              Filtrar por categoria\n            </Form.Label>\n            <Dropdown>\n              <Dropdown.Toggle\n                size=\"sm\"\n                style={{\n                  backgroundColor: \"#fff\",\n                  border: \"1px solid rgb(108, 117, 125, 0.3)\",\n                  color: \"#000\",\n                  width: \"200px\",\n                }}\n              >\n                {filtro}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={() => setFiltro(\"Sem filtro\")}>\n                  Sem filtro\n                </Dropdown.Item>\n                {categorias?.map((item, id) => {\n                  return (\n                    <Dropdown.Item\n                      onClick={() => setFiltro(item.value)}\n                      key={id}\n                    >\n                      {item.value}\n                    </Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown> */}\n          </div>\n        </Container>\n\n        <div className=\"container-item\" id=\"cursos-list\">\n          <div className=\"courses-container\">\n            {bannersList?.map((banner) => {\n              return (\n                <BannerCard\n                  key={banner.id}\n                  id={banner.id}\n                  title={banner.titulo}\n                  status={banner.status}\n                  action={() => {\n                    console.log(\"Executa uma ação\");\n                  }}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </Container>\n\n      <AddBannerModal\n        show={showAddBannerModal}\n        onHide={() => isShowAddBannerModal(false)}\n      />\n    </>\n  );\n}\n\nexport default Banners;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/AddBannerModal.jsx",["496","497","498"],"import { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Row, Alert } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport bannerCreate from \"../../services/banner/bannerCreate\";\nimport uploadImage from \"../../services/imagem/upload\";\n// import ResultCreateCourseModal from \"./ResultCreateCourseModal\";\n\nconst axios = require(\"axios\").default;\n\nfunction AddBannerModal(props) {\n  const { result, ...rest } = props;\n\n  const [imgFile, setImgFile] = useState({});\n  const [imgTitle, setImgTitle] = useState(\"\");\n  const [imgDesc, setImgDesc]   = useState(\"\");\n  const [imgStatus, setImgStatus] = useState(false);\n\n  async function handleSubmit() {\n    const data = {\n      imagemUrl: imgFile,\n      titulo: imgTitle,\n      descricao: imgDesc,\n      status: imgStatus,\n    };\n\n    await bannerCreate(data)\n\n    setImgFile({});\n    setImgTitle(\"\");\n    setImgStatus(false);\n    props.onHide();\n  }\n\n  useEffect(() => {\n    setImgFile({});\n    setImgTitle(\"\");\n    setImgStatus(false);\n  }, []);\n\n  async function handleUploadImage(image){\n    if (image.type.includes('image')) {\n      \n      uploadImage(image, setImgFile)\n\n    }\n    else {\n      toast.error('Arquivo inválido!')\n    }\n  }\n\n  return (\n    <>\n      <Modal {...rest} centered animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Adicionar banner</Modal.Title>\n        </Modal.Header>\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit();\n          }}\n        >\n          <Modal.Body>\n            <div>\n              <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                <Form.Label column sm=\"2\">\n                  Imagem\n                </Form.Label>\n                <Form.Control\n                  type=\"file\"\n                  required\n                  onChange={(e) => {\n                    handleUploadImage(e.target.files[0])\n                  }}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Label column sm=\"2\">\n                  Título\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Título\"\n                  onChange={(e) => setImgTitle(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Label column sm=\"2\">\n                  Descrição\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Descrição\"\n                  onChange={(e) => setImgDesc(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                <Form.Label column sm=\"2\">\n                  Status\n                </Form.Label>\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Ativo\"\n                  onChange={(e) => setImgStatus(!imgStatus)}\n                />\n              </Form.Group>\n            </div>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button\n              style={{\n                border: \"none\",\n                boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n              }}\n              variant=\"danger\"\n              onClick={() => {\n                props.onHide();\n              }}\n            >\n              Cancelar\n            </Button>\n\n            <Button\n              style={{\n                backgroundColor: \"#14B8A6\",\n                border: \"none\",\n                boxShadow: \"0px 3px 14px -8px rgba(98,63,101,0.53)\",\n              }}\n              type=\"submit\"\n            >\n              Adicionar\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddBannerModal;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/BannerCard/BannerCard.jsx",["499","500"],"import React from \"react\";\n\nimport { BsTrashFill, BsEyeFill, BsEyeSlashFill } from \"react-icons/bs\";\nimport bannerDelete from \"../../services/banner/bannerDelete\";\nimport bannerUpdate from \"../../services/banner/bannerUpdate\";\n\nimport \"./BannerCard.styles.css\";\n\nfunction BannerCard(props) {\n\n  async function handleDeleteOne(id){\n    console.log(id)\n    console.log(\"clicou\")\n    await bannerDelete(id)\n    \n  }\n\n  async function toggleShow(status){\n    console.log(status)\n\n    let newStatus;\n\n    if(status == 1){\n      newStatus = 0\n    }\n    else{\n      newStatus = 1\n    }\n\n    console.log(newStatus)\n\n\n    let data = {\n      status: newStatus\n    }\n\n    bannerUpdate(data, props.id)\n  }\n\n  return (\n    <div className=\"banner-card\">\n      <div className=\"banner-title\">{props.title}</div>\n      <div className=\"banner-icons\">\n        <div className=\"banner-status\">\n          {props.status == 1 ? (\n            <BsEyeFill onClick={() => toggleShow(props.status)} id=\"active-icon\" />\n          ) : (\n            <BsEyeSlashFill onClick={() => toggleShow(props.status)}   id=\"inactive-icon\" />\n          )}\n        </div>\n        <div className=\"banner-action\">\n          <BsTrashFill onClick={() => handleDeleteOne(props.id)} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BannerCard;\n","/home/ryan/Desktop/Trabalho/presper-daher/src/utils/currenryConfig.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/curso/cursoCreate.js",["501"],"/*\nFunção usada no cadastro\n*/\n\nimport {api} from '../api'\n\nimport responseHandler from '../../utils/responseHandler'\nimport servidorErrorMessage from '../../utils/servidorErrorMessage'\n\n\nexport default async function cursoCreate(data) {\n    return api.post('produto', {\n      data\n      })\n      .then((response) => {\n        let mensagemOk = 'Recebemos seu produto, ele será revisado e logo estará na plataforma :)'\n        let mensagemNaoOK = 'Revise os dados do produto :('\n        responseHandler(response.status, mensagemOk, mensagemNaoOK)\n        if (response.status == 200) {\n          //first check the http response, returning the result to user\n          return 'ok'\n        }\n\n      })\n      .catch(() => {\n        servidorErrorMessage()\n      })\n  }","/home/ryan/Desktop/Trabalho/presper-daher/src/services/curso/cursoUpdate.js",["502","503"],"/*\nFunção usada no cadastro\n*/\n\nimport {api} from '../api'\n\nimport responseHandler from '../../utils/responseHandler'\nimport servidorErrorMessage from '../../utils/servidorErrorMessage'\n\n\nexport default async function cursoUpdate(data, id) {\n    return api.put(`produto/${id}`, {\n      data\n      })\n      .then((response) => {\n        let mensagemOk = 'Seu produto foi alterado com sucesso! Ele será revisado e logo estará na plataforma :)'\n        let mensagemNaoOK = 'Revise os dados do produto :('\n        responseHandler(response.status, mensagemOk, mensagemNaoOK)\n        if (response.status == 200) {\n          //first check the http response, returning the result to user\n          return 'ok'\n        }\n\n      })\n      // .catch(() => {\n      //   servidorErrorMessage()\n      // })\n  }","/home/ryan/Desktop/Trabalho/presper-daher/src/services/categoria/loadCategorias.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/banner/bannerCreate.js",["504"],"/*\nFunção usada no cadastro\n*/\n\nimport {api} from '../api'\n\nimport responseHandler from '../../utils/responseHandler'\nimport servidorErrorMessage from '../../utils/servidorErrorMessage'\n\n\nexport default async function bannerCreate(data) {\n    return api.post('banner', {\n      data\n      })\n      .then((response) => {\n        let mensagemOk = 'Banner criado com sucesso! :)'\n        let mensagemNaoOK = 'Revise os dados do banner :('\n        responseHandler(response.status, mensagemOk, mensagemNaoOK)\n        if (response.status == 200) {\n          //first check the http response, returning the result to user\n          return 'ok'\n        }\n\n      })\n      .catch(() => {\n        servidorErrorMessage()\n      })\n  }","/home/ryan/Desktop/Trabalho/presper-daher/src/services/banner/bannerLoad.js",["505"],"import { api, apiWithTenantAndWithToken } from \"../api\";\n\n\n\nexport default async function bannerLoad(){\n    return await api.get(`banner`)\n          .then((response) => {\n            let bannerData = response.data.rows\n            return bannerData\n          });\n}\n","/home/ryan/Desktop/Trabalho/presper-daher/src/services/banner/bannerDelete.js",["506"],"import { toast } from \"react-toastify\";\nimport { api, apiWithTenantAndWithToken } from \"../api\";\n\n\n\nexport default async function bannerDelete(bannerId){\n    return await api.delete(`bannerDeleteOne/${bannerId}`,{\n      params:{\n        id: bannerId,\n      }\n    }).then((response) => {\n            console.log(response)\n            let bannerData = response.data\n            toast.success(\"Excluido com sucesso!\")\n            return bannerData\n          });\n}\n","/home/ryan/Desktop/Trabalho/presper-daher/src/services/banner/bannerUpdate.js",["507","508"],"/*\nFunção usada no cadastro\n*/\n\nimport {api} from '../api'\n\nimport responseHandler from '../../utils/responseHandler'\nimport servidorErrorMessage from '../../utils/servidorErrorMessage'\n\n\nexport default async function bannerUpdate(data, id) {\n    return api.put(`banner/${id}`, {\n      data\n      })\n      .then((response) => {\n        let mensagemOk = 'Seu banner foi alterado com sucesso! Ele será revisado e logo estará na plataforma :)'\n        let mensagemNaoOK = 'Revise os dados do banner :('\n        responseHandler(response.status, mensagemOk, mensagemNaoOK)\n        if (response.status == 200) {\n          //first check the http response, returning the result to user\n          return 'ok'\n        }\n\n      })\n      // .catch(() => {\n      //   servidorErrorMessage()\n      // })\n  }","/home/ryan/Desktop/Trabalho/presper-daher/src/contexts/CartContext.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/contexts/CreditCardContext.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/pages/CheckOut/CheckOut.jsx",["509","510","511"],"/home/ryan/Desktop/Trabalho/presper-daher/src/contexts/CourseContext.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/contexts/AuthContext.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/CreditCardService.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/Hooks/SignupPageHook.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/CourseService.js",["512"],"import { ApiService } from \"../services/ApiService\";\nimport cursoCreate from \"./curso/cursoCreate\";\nimport cursoDelete from \"./curso/cursoDelete\";\nimport cursoFind from \"./curso/cursoFind\";\nimport cursoLoad from \"./curso/cursoLoad\";\nimport cursoUpdate from \"./curso/cursoUpdate\";\n\nclass CourseService {\n  async createCourse(body) {\n    try {\n      const response = await cursoCreate(body)\n      return response;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async updateCourse(id, body) {\n    try {\n      const response = cursoUpdate(id, body)\n      return response;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async getAllCourses() {\n    try {\n      const response = await cursoLoad()\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getCourse(id) {\n    try {\n      const response = await cursoFind(id)\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async deleteCourse(id) {\n    try {\n      const response = await cursoDelete(id)\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default new CourseService();\n","/home/ryan/Desktop/Trabalho/presper-daher/src/services/MessageService.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/ApiService.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AddCardForm/AddCardForm.jsx",["513"],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/UserService.js",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/Hooks/CreditCardPageHook.js",["514","515","516"],"import { useState, useEffect } from \"react\";\nimport { CreditCardService } from \"../CreditCardService\";\n\n// import { useCourse } from \"../../contexts/CourseContext/CourseContext\";\n\nexport const useCreditCardPage = () => {\n  //   const [showCvc, setShowCvc] = useState(false);\n  const [cardName, setCardName] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardExpiry, setCardExpiry] = useState(\"\");\n  const [cardCvc, setCardCvc] = useState(\"\");\n\n  const [creditCardsList, setCerditCardsList] = useState([]);\n  //   const [cardId, setCardId] = useState(\"\");\n\n  const addCreditCard = async () => {\n    const body = {\n      name: cardName,\n      number: cardNumber,\n      expiry: cardExpiry,\n      cvc: cardCvc,\n    };\n    try {\n      console.log(body);\n      //   const response = await CreditCardService.createCreditCard(body);\n      //   setResult(response.status);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setCardNumber(\"\");\n    setCardName(\"\");\n    setCardExpiry(\"\");\n    setCardCvc(\"\");\n    // setCourse(body);\n    // setResultCreateCourseModalShow(true);\n    // setVideosErrors([]);\n    // getCourses();\n  };\n\n  useEffect(() => {}, []);\n\n  return {\n    cardName,\n    setCardName,\n    cardNumber,\n    setCardNumber,\n    cardExpiry,\n    setCardExpiry,\n    cardCvc,\n    setCardCvc,\n    //---------------\n    addCreditCard,\n  };\n};\n","/home/ryan/Desktop/Trabalho/presper-daher/src/services/Hooks/CoursePageHook.js",["517"],"import { useState, useEffect } from \"react\";\nimport CourseService from \"../CourseService\";\n\nimport { useCourse } from \"../../contexts/CourseContext\";\n\nexport const useCoursePage = () => {\n  const { getCourses, isUpdated } = useCourse();\n\n  const [resultCreateCourseModalShow, setResultCreateCourseModalShow] =\n    useState(false);\n  const [resultEditCourseModalShow, setResultEditCourseModalShow] =\n    useState(false);\n  const [resultDeleteCourseModalShow, setResultDeleteCourseModalShow] =\n    useState(false);\n\n  const [image, setImage] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [videos, setVideos] = useState([]);\n  const [videosErrors, setVideosErrors] = useState([]);\n\n  const [videosList, setVideosList] = useState([]);\n  const [course, setCourse] = useState({});\n\n  const [result, setResult] = useState(null);\n\n  const createCourse = async () => {\n    const body = {\n      // courseImage: image,\n      title: title,\n      author: author,\n      price: price,\n      category: category,\n      description: description,\n      videos: videosList,\n      // videos: videos,\n    };\n    // const courseImage = image;\n\n    try {\n      const response = await CourseService.createCourse(body);\n      setResult(response.status);\n    } catch (error) {\n      console.error(error);\n    }\n    setCourse(body);\n    setResultCreateCourseModalShow(true);\n    setVideosErrors([]);\n    getCourses();\n  };\n\n  const updateCourse = async (id, data) => {\n    const body = data;\n    try {\n      const response = await CourseService.updateCourse(id, body);\n      setResult(response.status);\n      isUpdated(true);\n    } catch (error) {\n      console.error(error);\n    }\n    setResultEditCourseModalShow(true);\n    getCourses();\n  };\n\n  const deleteCourse = async (id) => {\n    try {\n      const response = await CourseService.deleteCourse(id);\n      setResult(response.status);\n    } catch (error) {\n      console.error(error);\n    }\n    setResultDeleteCourseModalShow(true);\n    getCourses();\n  };\n\n  useEffect(() => {\n    setResultCreateCourseModalShow(false);\n    setResultEditCourseModalShow(false);\n    setResultDeleteCourseModalShow(false);\n    getCourses();\n  }, []);\n\n  // useEffect(() => {\n  //   getCourses();\n  // }, [result]);\n\n  return {\n    createCourse,\n    updateCourse,\n    deleteCourse,\n    result,\n    setResult,\n    image,\n    setImage,\n    title,\n    setTitle,\n    author,\n    setAuthor,\n    price,\n    setPrice,\n    category,\n    setCategory,\n    description,\n    setDescription,\n    videos,\n    setVideos,\n    videosErrors,\n    setVideosErrors,\n    videosList,\n    setVideosList,\n    course,\n    setCourse,\n    resultCreateCourseModalShow,\n    setResultCreateCourseModalShow,\n    resultEditCourseModalShow,\n    setResultEditCourseModalShow,\n    resultDeleteCourseModalShow,\n    setResultDeleteCourseModalShow,\n  };\n};\n","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/DeleteCourseModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultDeleteCourseModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/Hooks/LoginPageHook.js",["518","519","520","521","522","523"],"/home/ryan/Desktop/Trabalho/presper-daher/src/services/curso/cursoDelete.js",["524"],"import { toast } from \"react-toastify\";\nimport { api, apiWithTenantAndWithToken } from \"../api\";\n\n\n\nexport default async function cursoDelete(produtoId){\n    return await api.delete(`produto/${produtoId}`,{\n      params:{\n        id: produtoId,\n      }\n    }).then((response) => {\n            // console.log(response)\n            let produtoData = response.data\n            toast.success(\"Excluido com sucesso!\")\n            // location.reload(true)\n            return produtoData\n          });\n}\n","/home/ryan/Desktop/Trabalho/presper-daher/src/services/curso/cursoFind.js",["525"],"import { api, apiWithTenantAndWithToken } from \"../api\";\n\n\n\nexport default async function cursoFind(produtoId){\n    return await api.get(`produto/${produtoId}`)\n          .then((response) => {\n            // console.log(response)\n            let produtoData = response.data\n            return produtoData\n          });\n}\n","/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/AdminCategory/AdminCategory.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/CreateCategoryModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/EditCategoryModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultEditCategoryModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/DeleteCategoryModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultCreateCategoryModal.jsx",[],"/home/ryan/Desktop/Trabalho/presper-daher/src/componentes/Modals/ResultDeleteCategoryModal.jsx",[],{"ruleId":"526","replacedBy":"527"},{"ruleId":"528","replacedBy":"529"},{"ruleId":"530","severity":1,"message":"531","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":23},{"ruleId":"530","severity":1,"message":"534","line":1,"column":46,"nodeType":"532","messageId":"533","endLine":1,"endColumn":56},{"ruleId":"530","severity":1,"message":"535","line":11,"column":8,"nodeType":"532","messageId":"533","endLine":11,"endColumn":13},{"ruleId":"530","severity":1,"message":"536","line":17,"column":17,"nodeType":"532","messageId":"533","endLine":17,"endColumn":25},{"ruleId":"530","severity":1,"message":"537","line":18,"column":10,"nodeType":"532","messageId":"533","endLine":18,"endColumn":22},{"ruleId":"530","severity":1,"message":"538","line":18,"column":24,"nodeType":"532","messageId":"533","endLine":18,"endColumn":39},{"ruleId":"530","severity":1,"message":"539","line":22,"column":18,"nodeType":"532","messageId":"533","endLine":22,"endColumn":30},{"ruleId":"540","severity":1,"message":"541","line":26,"column":12,"nodeType":"542","messageId":"543","endLine":26,"endColumn":14},{"ruleId":"544","severity":1,"message":"545","line":40,"column":6,"nodeType":"546","endLine":40,"endColumn":8,"suggestions":"547"},{"ruleId":"544","severity":1,"message":"548","line":30,"column":6,"nodeType":"546","endLine":30,"endColumn":8,"suggestions":"549"},{"ruleId":"530","severity":1,"message":"534","line":1,"column":31,"nodeType":"532","messageId":"533","endLine":1,"endColumn":41},{"ruleId":"544","severity":1,"message":"550","line":24,"column":6,"nodeType":"546","endLine":24,"endColumn":22,"suggestions":"551"},{"ruleId":"544","severity":1,"message":"552","line":31,"column":6,"nodeType":"546","endLine":31,"endColumn":19,"suggestions":"553"},{"ruleId":"530","severity":1,"message":"554","line":21,"column":7,"nodeType":"532","messageId":"533","endLine":21,"endColumn":12},{"ruleId":"530","severity":1,"message":"555","line":25,"column":21,"nodeType":"532","messageId":"533","endLine":25,"endColumn":33},{"ruleId":"530","severity":1,"message":"556","line":76,"column":11,"nodeType":"532","messageId":"533","endLine":76,"endColumn":22},{"ruleId":"544","severity":1,"message":"557","line":28,"column":6,"nodeType":"546","endLine":28,"endColumn":27,"suggestions":"558"},{"ruleId":"544","severity":1,"message":"552","line":32,"column":6,"nodeType":"546","endLine":32,"endColumn":19,"suggestions":"559"},{"ruleId":"530","severity":1,"message":"560","line":40,"column":10,"nodeType":"532","messageId":"533","endLine":40,"endColumn":21},{"ruleId":"530","severity":1,"message":"561","line":48,"column":12,"nodeType":"532","messageId":"533","endLine":48,"endColumn":23},{"ruleId":"530","severity":1,"message":"539","line":52,"column":18,"nodeType":"532","messageId":"533","endLine":52,"endColumn":30},{"ruleId":"530","severity":1,"message":"562","line":53,"column":11,"nodeType":"532","messageId":"533","endLine":53,"endColumn":15},{"ruleId":"530","severity":1,"message":"563","line":88,"column":18,"nodeType":"532","messageId":"533","endLine":88,"endColumn":28},{"ruleId":"530","severity":1,"message":"531","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":23},{"ruleId":"530","severity":1,"message":"534","line":1,"column":46,"nodeType":"532","messageId":"533","endLine":1,"endColumn":56},{"ruleId":"530","severity":1,"message":"564","line":6,"column":10,"nodeType":"532","messageId":"533","endLine":6,"endColumn":15},{"ruleId":"530","severity":1,"message":"565","line":10,"column":16,"nodeType":"532","messageId":"533","endLine":10,"endColumn":23},{"ruleId":"530","severity":1,"message":"536","line":12,"column":17,"nodeType":"532","messageId":"533","endLine":12,"endColumn":25},{"ruleId":"530","severity":1,"message":"566","line":13,"column":25,"nodeType":"532","messageId":"533","endLine":13,"endColumn":41},{"ruleId":"530","severity":1,"message":"567","line":14,"column":10,"nodeType":"532","messageId":"533","endLine":14,"endColumn":19},{"ruleId":"530","severity":1,"message":"568","line":14,"column":21,"nodeType":"532","messageId":"533","endLine":14,"endColumn":33},{"ruleId":"540","severity":1,"message":"541","line":26,"column":14,"nodeType":"542","messageId":"543","endLine":26,"endColumn":16},{"ruleId":"544","severity":1,"message":"545","line":38,"column":6,"nodeType":"546","endLine":38,"endColumn":8,"suggestions":"569"},{"ruleId":"530","severity":1,"message":"570","line":40,"column":5,"nodeType":"532","messageId":"533","endLine":40,"endColumn":11},{"ruleId":"530","severity":1,"message":"571","line":20,"column":37,"nodeType":"532","messageId":"533","endLine":20,"endColumn":44},{"ruleId":"530","severity":1,"message":"572","line":27,"column":9,"nodeType":"532","messageId":"533","endLine":27,"endColumn":16},{"ruleId":"544","severity":1,"message":"557","line":43,"column":6,"nodeType":"546","endLine":43,"endColumn":27,"suggestions":"573"},{"ruleId":"544","severity":1,"message":"552","line":47,"column":6,"nodeType":"546","endLine":47,"endColumn":19,"suggestions":"574"},{"ruleId":"530","severity":1,"message":"575","line":130,"column":11,"nodeType":"532","messageId":"533","endLine":130,"endColumn":21},{"ruleId":"530","severity":1,"message":"576","line":2,"column":31,"nodeType":"532","messageId":"533","endLine":2,"endColumn":34},{"ruleId":"530","severity":1,"message":"577","line":2,"column":36,"nodeType":"532","messageId":"533","endLine":2,"endColumn":41},{"ruleId":"530","severity":1,"message":"578","line":3,"column":8,"nodeType":"532","messageId":"533","endLine":3,"endColumn":31},{"ruleId":"530","severity":1,"message":"579","line":179,"column":10,"nodeType":"532","messageId":"533","endLine":179,"endColumn":21},{"ruleId":"530","severity":1,"message":"580","line":201,"column":25,"nodeType":"532","messageId":"533","endLine":201,"endColumn":29},{"ruleId":"530","severity":1,"message":"581","line":203,"column":11,"nodeType":"532","messageId":"533","endLine":203,"endColumn":19},{"ruleId":"530","severity":1,"message":"582","line":2,"column":10,"nodeType":"532","messageId":"533","endLine":2,"endColumn":13},{"ruleId":"530","severity":1,"message":"583","line":47,"column":5,"nodeType":"532","messageId":"533","endLine":47,"endColumn":11},{"ruleId":"530","severity":1,"message":"584","line":48,"column":5,"nodeType":"532","messageId":"533","endLine":48,"endColumn":14},{"ruleId":"530","severity":1,"message":"585","line":51,"column":5,"nodeType":"532","messageId":"533","endLine":51,"endColumn":17},{"ruleId":"530","severity":1,"message":"531","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":23},{"ruleId":"530","severity":1,"message":"534","line":1,"column":46,"nodeType":"532","messageId":"533","endLine":1,"endColumn":56},{"ruleId":"530","severity":1,"message":"539","line":41,"column":18,"nodeType":"532","messageId":"533","endLine":41,"endColumn":30},{"ruleId":"530","severity":1,"message":"584","line":80,"column":5,"nodeType":"532","messageId":"533","endLine":80,"endColumn":14},{"ruleId":"540","severity":1,"message":"586","line":22,"column":28,"nodeType":"542","messageId":"543","endLine":22,"endColumn":30},{"ruleId":"540","severity":1,"message":"586","line":43,"column":23,"nodeType":"542","messageId":"543","endLine":43,"endColumn":25},{"ruleId":"540","severity":1,"message":"541","line":31,"column":29,"nodeType":"542","messageId":"543","endLine":31,"endColumn":31},{"ruleId":"540","severity":1,"message":"541","line":11,"column":23,"nodeType":"542","messageId":"543","endLine":11,"endColumn":25},{"ruleId":"540","severity":1,"message":"541","line":21,"column":27,"nodeType":"542","messageId":"543","endLine":21,"endColumn":29},{"ruleId":"540","severity":1,"message":"541","line":22,"column":29,"nodeType":"542","messageId":"543","endLine":22,"endColumn":31},{"ruleId":"530","severity":1,"message":"564","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":15},{"ruleId":"540","severity":1,"message":"541","line":11,"column":26,"nodeType":"542","messageId":"543","endLine":11,"endColumn":28},{"ruleId":"530","severity":1,"message":"564","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":15},{"ruleId":"530","severity":1,"message":"587","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":21},{"ruleId":"588","severity":1,"message":"589","line":6,"column":41,"nodeType":"590","messageId":"591","endLine":6,"endColumn":43},{"ruleId":"540","severity":1,"message":"541","line":12,"column":26,"nodeType":"542","messageId":"543","endLine":12,"endColumn":28},{"ruleId":"540","severity":1,"message":"541","line":22,"column":31,"nodeType":"542","messageId":"543","endLine":22,"endColumn":33},{"ruleId":"530","severity":1,"message":"592","line":1,"column":15,"nodeType":"532","messageId":"533","endLine":1,"endColumn":40},{"ruleId":"530","severity":1,"message":"592","line":1,"column":15,"nodeType":"532","messageId":"533","endLine":1,"endColumn":40},{"ruleId":"530","severity":1,"message":"592","line":1,"column":15,"nodeType":"532","messageId":"533","endLine":1,"endColumn":40},{"ruleId":"530","severity":1,"message":"592","line":1,"column":15,"nodeType":"532","messageId":"533","endLine":1,"endColumn":40},{"ruleId":"526","replacedBy":"593"},{"ruleId":"528","replacedBy":"594"},{"ruleId":"530","severity":1,"message":"554","line":17,"column":7,"nodeType":"532","messageId":"533","endLine":17,"endColumn":12},{"ruleId":"530","severity":1,"message":"576","line":2,"column":31,"nodeType":"532","messageId":"533","endLine":2,"endColumn":34},{"ruleId":"530","severity":1,"message":"577","line":2,"column":36,"nodeType":"532","messageId":"533","endLine":2,"endColumn":41},{"ruleId":"530","severity":1,"message":"554","line":8,"column":7,"nodeType":"532","messageId":"533","endLine":8,"endColumn":12},{"ruleId":"540","severity":1,"message":"541","line":23,"column":15,"nodeType":"542","messageId":"543","endLine":23,"endColumn":17},{"ruleId":"540","severity":1,"message":"541","line":45,"column":25,"nodeType":"542","messageId":"543","endLine":45,"endColumn":27},{"ruleId":"540","severity":1,"message":"541","line":19,"column":29,"nodeType":"542","messageId":"543","endLine":19,"endColumn":31},{"ruleId":"530","severity":1,"message":"595","line":8,"column":8,"nodeType":"532","messageId":"533","endLine":8,"endColumn":28},{"ruleId":"540","severity":1,"message":"541","line":19,"column":29,"nodeType":"542","messageId":"543","endLine":19,"endColumn":31},{"ruleId":"540","severity":1,"message":"541","line":19,"column":29,"nodeType":"542","messageId":"543","endLine":19,"endColumn":31},{"ruleId":"530","severity":1,"message":"592","line":1,"column":15,"nodeType":"532","messageId":"533","endLine":1,"endColumn":40},{"ruleId":"530","severity":1,"message":"592","line":2,"column":15,"nodeType":"532","messageId":"533","endLine":2,"endColumn":40},{"ruleId":"530","severity":1,"message":"595","line":8,"column":8,"nodeType":"532","messageId":"533","endLine":8,"endColumn":28},{"ruleId":"540","severity":1,"message":"541","line":19,"column":29,"nodeType":"542","messageId":"543","endLine":19,"endColumn":31},{"ruleId":"530","severity":1,"message":"596","line":22,"column":10,"nodeType":"532","messageId":"533","endLine":22,"endColumn":16},{"ruleId":"544","severity":1,"message":"597","line":29,"column":6,"nodeType":"546","endLine":29,"endColumn":8,"suggestions":"598"},{"ruleId":"530","severity":1,"message":"599","line":31,"column":9,"nodeType":"532","messageId":"533","endLine":31,"endColumn":20},{"ruleId":"530","severity":1,"message":"600","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":20},{"ruleId":"544","severity":1,"message":"601","line":38,"column":6,"nodeType":"546","endLine":38,"endColumn":8,"suggestions":"602"},{"ruleId":"530","severity":1,"message":"603","line":2,"column":10,"nodeType":"532","messageId":"533","endLine":2,"endColumn":27},{"ruleId":"530","severity":1,"message":"604","line":13,"column":10,"nodeType":"532","messageId":"533","endLine":13,"endColumn":25},{"ruleId":"530","severity":1,"message":"605","line":13,"column":27,"nodeType":"532","messageId":"533","endLine":13,"endColumn":45},{"ruleId":"544","severity":1,"message":"606","line":84,"column":6,"nodeType":"546","endLine":84,"endColumn":8,"suggestions":"607"},{"ruleId":"530","severity":1,"message":"608","line":17,"column":11,"nodeType":"532","messageId":"533","endLine":17,"endColumn":18},{"ruleId":"530","severity":1,"message":"609","line":17,"column":20,"nodeType":"532","messageId":"533","endLine":17,"endColumn":28},{"ruleId":"530","severity":1,"message":"610","line":17,"column":30,"nodeType":"532","messageId":"533","endLine":17,"endColumn":36},{"ruleId":"530","severity":1,"message":"611","line":17,"column":38,"nodeType":"532","messageId":"533","endLine":17,"endColumn":45},{"ruleId":"530","severity":1,"message":"612","line":19,"column":9,"nodeType":"532","messageId":"533","endLine":19,"endColumn":17},{"ruleId":"540","severity":1,"message":"541","line":61,"column":12,"nodeType":"542","messageId":"543","endLine":61,"endColumn":14},{"ruleId":"530","severity":1,"message":"592","line":2,"column":15,"nodeType":"532","messageId":"533","endLine":2,"endColumn":40},{"ruleId":"530","severity":1,"message":"592","line":1,"column":15,"nodeType":"532","messageId":"533","endLine":1,"endColumn":40},"no-native-reassign",["613"],"no-negated-in-lhs",["614"],"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'login' is defined but never used.","'setSenha' is assigned a value but never used.","'lembrarSenha' is assigned a value but never used.","'setLembrarSenha' is assigned a value but never used.","'handleSubmit' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setShowAlert'. Either include it or remove the dependency array.","ArrayExpression",["615"],"React Hook useEffect has a missing dependency: 'getCourse'. Either include it or remove the dependency array.",["616"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["617"],"React Hook useEffect has a missing dependency: 'buscarPor'. Either include it or remove the dependency array.",["618"],"'axios' is assigned a value but never used.","'setShowAlert' is assigned a value but never used.","'updatedUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'classificarPor' and 'filtrarPor'. Either include them or remove the dependency array.",["619"],["620"],"'coursesList' is assigned a value but never used.","'handleClick' is defined but never used.","'data' is assigned a value but never used.","'getCourses' is defined but never used.","'toast' is defined but never used.","'setNome' is assigned a value but never used.","'setConfirmaSenha' is assigned a value but never used.","'inscricao' is assigned a value but never used.","'setInscricao' is assigned a value but never used.",["621"],"'signUp' is assigned a value but never used.","'getCart' is assigned a value but never used.","'courses' is assigned a value but never used.",["622"],["623"],"'categorias' is assigned a value but never used.","'Row' is defined but never used.","'Alert' is defined but never used.","'ResultCreateCourseModal' is defined but never used.","'CartContext' is defined but never used.","'role' is assigned a value but never used.","'isLogged' is assigned a value but never used.","'Col' is defined but never used.","'videos' is assigned a value but never used.","'setVideos' is assigned a value but never used.","'updateCourse' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'formatPrice' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'apiWithTenantAndWithToken' is defined but never used.",["613"],["614"],"'servidorErrorMessage' is defined but never used.","'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCreditCards'. Either include it or remove the dependency array.",["624"],"'getAddCards' is assigned a value but never used.","'ApiService' is defined but never used.","React Hook useEffect has missing dependencies: 'setCardCvc', 'setCardExpiry', 'setCardName', and 'setCardNumber'. Either include them or remove the dependency array.",["625"],"'CreditCardService' is defined but never used.","'creditCardsList' is assigned a value but never used.","'setCerditCardsList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCourses'. Either include it or remove the dependency array.",["626"],"'setUser' is assigned a value but never used.","'setToken' is assigned a value but never used.","'signIn' is assigned a value but never used.","'setRole' is assigned a value but never used.","'navigate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"633","fix":"637"},{"desc":"627","fix":"638"},{"desc":"635","fix":"639"},{"desc":"633","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},"Update the dependencies array to be: [setShowAlert]",{"range":"647","text":"648"},"Update the dependencies array to be: [getCourse]",{"range":"649","text":"650"},"Update the dependencies array to be: [navigate, showPage, user]",{"range":"651","text":"652"},"Update the dependencies array to be: [buscarCurso, buscarPor]",{"range":"653","text":"654"},"Update the dependencies array to be: [classificar, classificarPor, filtrarPor, filtro]",{"range":"655","text":"656"},{"range":"657","text":"654"},{"range":"658","text":"648"},{"range":"659","text":"656"},{"range":"660","text":"654"},"Update the dependencies array to be: [getCreditCards]",{"range":"661","text":"662"},"Update the dependencies array to be: [setCardCvc, setCardExpiry, setCardName, setCardNumber]",{"range":"663","text":"664"},"Update the dependencies array to be: [getCourses]",{"range":"665","text":"666"},[1036,1038],"[setShowAlert]",[953,955],"[getCourse]",[921,937],"[navigate, showPage, user]",[948,961],"[buscarCurso, buscarPor]",[873,894],"[classificar, classificarPor, filtrarPor, filtro]",[951,964],[1052,1054],[1235,1256],[1313,1326],[959,961],"[getCreditCards]",[809,811],"[setCardCvc, setCardExpiry, setCardName, setCardNumber]",[2364,2366],"[getCourses]"]